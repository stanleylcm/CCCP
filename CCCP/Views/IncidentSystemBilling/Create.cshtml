@model CCCP.ViewModel.IncidentSystemBilling

@{
    ViewBag.Title = "System(Billing)";
    string IncidentType = "System(Billing)";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        <i class="fa fa-clipboard"></i> Create Incident - @IncidentType
    </h1>
</section>

<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-lg-12">
            <div class="box box-primary">
                <div class="box-body">
                    @using (Html.BeginForm("Create", "IncidentSystemBilling", FormMethod.Post, new { onsubmit="validateForm()" }))
                    {
                        @Html.AntiForgeryToken()

                    <div class="row">
                        <div class="col-lg-1"></div>
                        <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => model.IssueDateTime)</label></div>
                        <div class="col-lg-4">
                            @Html.EditorFor(model => model.IssueDateTime, new { htmlAttributes = new { @class = "form-control thin-control" } })
                            @Html.ValidationMessageFor(model => model.IssueDateTime, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-1"></div>
                        <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => model.IncidentBackground)</label></div>
                        <div class="col-lg-4">
                            @Html.EditorFor(model => model.IncidentBackground, new { htmlAttributes = new { @class = "form-control thin-control" } })
                            @Html.ValidationMessageFor(model => model.IncidentBackground, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-1"></div>
                        <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => model.IsDrillMode)</label></div>
                        <div class="col-lg-4">
                            <div class="checkbox">
                                <input id="IsDrillMode" name="IsDrillMode" type="checkbox" value="" style="top:-10px; left: 20px" />
                                @Html.ValidationMessageFor(model => model.IsDrillMode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <fieldset class="scheduler-border">
                        <legend class="scheduler-border">Details</legend>

                        <div class="row">
                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => model.ProblemArea)</label></div>
                            <div class="col-lg-6">
                                <select id="ProblemArea" name="ProblemArea" class="form-control thin-control">
                                    <option value=""></option>
                                    <option value="System Bug">System Bug</option>
                                    <option value="Imperfect Business Logic">Imperfect Business Logic</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.ProblemArea, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => model.PossibleCause)</label></div>
                            <div class="col-lg-6">
                                <select id="PossibleCause" name="PossibleCause" class="form-control thin-control">
                                    <option value=""></option>
                                    <option value="Undefined Scenario">Undefined Scenario</option>
                                    <option value="Not Yet Confirmed">Not Yet Confirmed</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.PossibleCause, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => model.BillingErrorSeriousness)</label></div>
                            <div class="col-lg-6">
                                <select id="BillingErrorSeriousness" name="BillingErrorSeriousness" class="form-control thin-control">
                                    <option value=""></option>
                                    <option value="Comfort Zone">Comfort Zone</option>
                                    <option value="Manageable Zone">Manageable Zone</option>
                                    <option value="Danger Zone">Danger Zone</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.BillingErrorSeriousness, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => model.ExpectedAffectedCustomerBill)</label></div>
                            <div class="col-lg-6">
                                @Html.EditorFor(model => model.ExpectedAffectedCustomerBill, new { htmlAttributes = new { @class = "form-control thin-control" } })
                                @Html.ValidationMessageFor(model => model.ExpectedAffectedCustomerBill, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => model.ContactedBy)</label></div>
                            <div class="col-lg-6">
                                <input id="ContactedBy1" type="checkbox" value="Customer" /><label for="ContactedBy1"> Customer</label><br />
                                <input id="ContactedBy2" type="checkbox" value="Consumer Council" /><label for="ContactedBy2"> Consumer Council</label><br />
                                <input id="ContactedBy3" type="checkbox" value="Government" /><label for="ContactedBy3"> Government</label><br />
                                <input id="ContactedBy4" type="checkbox" value="Media" /><label for="ContactedBy4"> Media</label>
                                <input type="hidden" id="ContactedBy" name="ContactedBy" value="" />
                                @Html.ValidationMessageFor(model => model.ContactedBy, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => model.Impact)</label></div>
                            <div class="col-lg-6">
                                @Html.EditorFor(model => model.Impact, new { htmlAttributes = new { @class = "form-control thin-control" } })
                                @Html.ValidationMessageFor(model => model.Impact, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => model.StatusUpdate)</label></div>
                            <div class="col-lg-6">
                                <select id="StatusUpdate" name="StatusUpdate" class="form-control thin-control">
                                    <option value=""></option>
                                    <option value="Under Investigation">Under Investigation</option>
                                    <option value="Defining Mitigating Actions">Defining Mitigating Actions</option>
                                    <option value="Defining Resolution">Defining Resolution</option>
                                    <option value="Implementing Mitigating Actions">Implementing Mitigating Actions</option>
                                    <option value="Implementing Resolution">Implementing Resolution</option>
                                    <option value="Closing Communication">Closing Communication</option>
                                    <option value="Manageable Zone">Manageable Zone</option>
                                    <option value="Case Close">Case Close</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.StatusUpdate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => model.RequireMitigatingAction)</label></div>
                            <div class="col-lg-6">
                                <select id="RequireMitigatingAction" name="RequireMitigatingAction" class="form-control thin-control">
                                    <option value=""></option>
                                    <option value="Yes">Yes</option>
                                    <option value="No">No</option>
                                    <option value="Not Yet Confirmed">Not Yet Confirmed</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.RequireMitigatingAction, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => model.MitigatingAction)</label></div>
                            <div class="col-lg-6">
                                <input id="MitigatingAction1" type="checkbox" value="Create Temp. Tools for Manual Control & Correction" /><label for="MitigatingAction1"> Create Temp. Tools for Manual Control & Correction</label><br />
                                <input id="MitigatingAction2" type="checkbox" value="Suspend Bill Generation" /><label for="MitigatingAction2"> Suspend Bill Generation</label><br />
                                <input id="MitigatingAction3" type="checkbox" value="Others" /><label for="MitigatingAction3"> Others (please specify)</label><input id="MitigatingAction3More" name="MitigatingAction3More" type="text" value="" class="form-control thin-control text-box pull-right" style="width:70%" />
                                <input type="hidden" id="MitigatingAction" name="MitigatingAction" value="" />
                                @Html.ValidationMessageFor(model => model.MitigatingAction, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </fieldset>
    
                    <input type="hidden" id="IncidentSystemBillingId" value="" />
                    <input type="hidden" id="ChecklistBatchId" value="" />
                    <input type="hidden" id="ChatRoomId" value="" />
                    <input type="hidden" id="GeneralEnquiryId" value="" />
                    <input type="hidden" id="CrisisId" value="" />
                    <input type="hidden" id="NotificationId" value="" />
                    <input type="hidden" id="IssueById" value="" />
                    <input type="hidden" id="CloseById" value="" />
                    <input type="hidden" id="CloseDateTime" value="" />
                    <input type="hidden" id="IncidentNo" value="" />
                    <input type="hidden" id="LevelOfSeverity" value="" />
                    <input type="hidden" id="IncidentStatus" value="" />
                    <input type="hidden" id="CreatedBy" value="" />
                    <input type="hidden" id="CreatedDateTime" value="" />
                    <input type="hidden" id="LastUpdatedBy" value="" />
                    <input type="hidden" id="LastUpdatedDateTime" value="" />

                    <div class="box-footer">
                        <div class="btn-group">
                            <button class="btn btn-primary" type="submit">Create</button>
                            <button class="btn btn-primary" type="button" onclick="window.location = '@Url.Action("Index", "IncidentSystemBilling")';">Cancel</button>
                        </div>
                    </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $("input[type=checkbox][id^=ContactedBy]").on("click", function () {
            var sList = "";
            var i = 0;
            $("input[type=checkbox][id^=ContactedBy]").each(function(){
                if (this.checked) {
                    if (i == 0) {
                        sList = $(this).val();
                    } else {
                        sList = sList + ", " + $(this).val();
                    }
                    i++;
                }
            });
            $("#ContactedBy").val(sList);
        });

        $("input[type=checkbox][id^=MitigatingAction]").on("click", function () {
            var sList = "";
            var i = 0;
            $("input[type=checkbox][id^=MitigatingAction]").each(function () {
                if (this.checked) {
                    if (i == 0) {
                        sList = $(this).val();
                    } else {
                        sList = sList + ", " + $(this).val();
                    }
                    if ($(this).val() == "Others") {
                        sList = sList + " (" + $("#MitigatingAction3More").val() + ")";
                    }
                    i++;
                }
            });
            $("#MitigatingAction").val(sList);
        });

        $("#MitigatingAction3More").change(function () {
            var sList = "";
            var i = 0;
            $("input[type=checkbox][id^=MitigatingAction]").each(function () {
                if (this.checked) {
                    if (i == 0) {
                        sList = $(this).val();
                    } else {
                        sList = sList + ", " + $(this).val();
                    }
                    if ($(this).val() == "Others") {
                        sList = sList + " (" + $("#MitigatingAction3More").val() + ")";
                    }
                    i++;
                }
            });
            $("#MitigatingAction").val(sList);
        });

        $("#IsDrillMode").on("click", function () {
            $(this).val(this.checked);
        });

        function validateForm(event) {
            event = event || window.event || event.srcElement;
            alert($("form").serialize());
            /*
            if (~~newMonoReading < ~~initialMonoReading) {
                $('#MonoErrorMessage').text("New Mono Readings must be MORE than existing");
                $('#MonoErrorMessage').show();
                event.preventDefault();
            }
            else {
                $('#MonoErrorMessage').hide();
            }
            */
        }
    </script>
}
