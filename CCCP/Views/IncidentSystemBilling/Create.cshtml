@model CCCP.Business.Model.IncidentSystemBillingModel

@using CCCP.Common
@using CCCP.Business.Service
@{
    ViewBag.Title = Resources.global.Menu_IncidentSystemBilling;
    CCCP.ViewModel.IncidentSystemBilling incidentSystemBilling = Model.Entity; // variable for binding
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        <i class="fa fa-clipboard"></i> @Resources.global.Menu_IncidentManagement - @Resources.global.Func_Create @Resources.global.Menu_IncidentSystemBilling
    </h1>
</section>

<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-lg-12">
            <div class="box box-primary">
                <div class="box-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="row">
                        <div class="col-lg-1"></div>
                        <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentSystemBilling.LevelOfSeverity)</label></div>
                        <div class="col-lg-4">
                            <select id="incidentSystemBilling_LevelOfSeverity" name="incidentSystemBilling.LevelOfSeverity" class="form-control thin-control">
                                <option value=""></option>
                                @foreach (IncidentLevel one in Enum.GetValues(typeof(IncidentLevel)))
                                {
                                    if (one != IncidentLevel.None)
                                    {
                                        <option value="@(Convert.ToInt32(one))">@one.ToEnumString()</option>
                                    }
                                }
                            </select>
                            @Html.ValidationMessageFor(model => incidentSystemBilling.LevelOfSeverity, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-1"></div>
                        <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentSystemBilling.IncidentBackground)</label></div>
                        <div class="col-lg-4">
                            @Html.EditorFor(model => incidentSystemBilling.IncidentBackground, new { htmlAttributes = new { @class = "form-control thin-control" } })
                            @Html.ValidationMessageFor(model => incidentSystemBilling.IncidentBackground, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-1"></div>
                        <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentSystemBilling.IsDrillMode)</label></div>
                        <div class="col-lg-4">
                            <div class="checkbox">
                                <input id="incidentSystemBilling_IsDrillMode" name="incidentSystemBilling.IsDrillMode" type="checkbox" value="" style="top:-10px; left: 20px" />
                                @Html.ValidationMessageFor(model => incidentSystemBilling.IsDrillMode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <fieldset class="scheduler-border">
                        <legend class="scheduler-border">Details</legend>

                        <div class="row">
                            <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentSystemBilling.ProblemArea)</label></div>
                            <div class="col-lg-6">
                                <select id="incidentSystemBilling_ProblemArea" name="incidentSystemBilling.ProblemArea" class="form-control thin-control">
                                    <option value=""></option>
                                    @foreach (string one in Model.Options_ProblemArea)
                                    {
                                        <option value="@one">@one</option>
                                    }
                                </select>
                                @Html.ValidationMessageFor(model => incidentSystemBilling.ProblemArea, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentSystemBilling.PossibleCause)</label></div>
                            <div class="col-lg-6">
                                <select id="incidentSystemBilling_PossibleCause" name="incidentSystemBilling.PossibleCause" class="form-control thin-control">
                                    <option value=""></option>
                                    @foreach (string one in Model.Options_PossibleCause)
                                    {
                                        <option value="@one">@one</option>
                                    }
                                </select>
                                @Html.ValidationMessageFor(model => incidentSystemBilling.PossibleCause, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentSystemBilling.BillingErrorSeriousness)</label></div>
                            <div class="col-lg-6">
                                <select id="incidentSystemBilling_BillingErrorSeriousness" name="incidentSystemBilling.BillingErrorSeriousness" class="form-control thin-control">
                                    <option value=""></option>
                                    @foreach (string one in Model.Options_BillingErrorSeriousness)
                                    {
                                        <option value="@one">@one</option>
                                    }
                                </select>
                                @Html.ValidationMessageFor(model => incidentSystemBilling.BillingErrorSeriousness, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentSystemBilling.ExpectedAffectedCustomerBill)</label></div>
                            <div class="col-lg-6">
                                @Html.EditorFor(model => incidentSystemBilling.ExpectedAffectedCustomerBill, new { htmlAttributes = new { @class = "form-control thin-control" } })
                                @Html.ValidationMessageFor(model => incidentSystemBilling.ExpectedAffectedCustomerBill, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentSystemBilling.ContactedBy)</label></div>
                            <div class="col-lg-6">
                                @{
                                    int countContactedBy = 0;
                                    foreach (string one in Model.Options_ContactedBy)
                                    {
                                        <input id="ContactedBy@(countContactedBy.ToString())" type="checkbox" value="@one" /><label for="ContactedBy@(countContactedBy.ToString())"> @one</label><br />
                                        countContactedBy++;
                                    }
                                }
                                <input type="hidden" id="incidentSystemBilling_ContactedBy" name="incidentSystemBilling.ContactedBy" value="" />
                                @Html.ValidationMessageFor(model => incidentSystemBilling.ContactedBy, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentSystemBilling.Impact)</label></div>
                            <div class="col-lg-6">
                                @Html.EditorFor(model => incidentSystemBilling.Impact, new { htmlAttributes = new { @class = "form-control thin-control" } })
                                @Html.ValidationMessageFor(model => incidentSystemBilling.Impact, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentSystemBilling.StatusUpdate)</label></div>
                            <div class="col-lg-6">
                                <select id="incidentSystemBilling_StatusUpdate" name="incidentSystemBilling.StatusUpdate" class="form-control thin-control">
                                    <option value=""></option>
                                    @foreach (string one in Model.Options_StatusUpdate)
                                    {
                                        <option value="@one">@one</option>
                                    }
                                </select>

                                @Html.ValidationMessageFor(model => incidentSystemBilling.StatusUpdate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentSystemBilling.RequireMitigatingAction)</label></div>
                            <div class="col-lg-6">
                                <select id="incidentSystemBilling_RequireMitigatingAction" name="incidentSystemBilling.RequireMitigatingAction" class="form-control thin-control">
                                    <option value=""></option>
                                    @foreach (string one in Model.Options_RequireMitigatingAction)
                                    {
                                        <option value="@one">@one</option>
                                    }
                                </select>

                                @Html.ValidationMessageFor(model => incidentSystemBilling.RequireMitigatingAction, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row" id="CreateMitigatingAction">
                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentSystemBilling.MitigatingAction)</label></div>
                            <div class="col-lg-6">
                                @{
                                    int countMitigatingAction = 0;
                                    foreach (string one in Model.Options_MitigatingAction)
                                    {
                                        <input id="MitigatingAction@(countMitigatingAction.ToString())" type="checkbox" value="@one" /><label for="MitigatingAction@(countMitigatingAction.ToString())"> @one</label>
                                        if (one != IncidentSystemBillingMitigatingAction.Others.ToEnumString())
                                        { 
                                        <br />
                                        }
                                        else
                                        {
                                        <input id="MitigatingAction@(one)More" name="MitigatingAction@(one)More" type="text" value="" class="form-control thin-control text-box pull-right" style="width:70%" />
                                        }
                                        countMitigatingAction++;
                                    }
}
                                <input type="hidden" id="incidentSystemBilling_MitigatingAction" name="incidentSystemBilling.MitigatingAction" value="" />
                                @Html.ValidationMessageFor(model => incidentSystemBilling.MitigatingAction, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </fieldset>
                            
                    @Html.HiddenFor(model => incidentSystemBilling.IncidentSystemBillingId, new { @Value = 0 })
                    @Html.HiddenFor(model => incidentSystemBilling.ChecklistBatchId, new { @Value = 0 })
                    @Html.HiddenFor(model => incidentSystemBilling.ChatRoomId, new { @Value = 0 })
                    @Html.HiddenFor(model => incidentSystemBilling.GeneralEnquiryId, new { @Value = 0 })
                    @Html.HiddenFor(model => incidentSystemBilling.CrisisId)
                    @Html.HiddenFor(model => incidentSystemBilling.NotificationId, new { @Value = 0 })
                    @Html.HiddenFor(model => incidentSystemBilling.IssueById)
                    @Html.HiddenFor(model => incidentSystemBilling.IssueDateTime)
                    @Html.HiddenFor(model => incidentSystemBilling.CloseById)
                    @Html.HiddenFor(model => incidentSystemBilling.CloseDateTime)
                    @Html.HiddenFor(model => incidentSystemBilling.IncidentNo)
                    @Html.HiddenFor(model => incidentSystemBilling.IncidentStatus)
                    @Html.HiddenFor(model => incidentSystemBilling.CreatedBy)
                    @Html.HiddenFor(model => incidentSystemBilling.CreatedDateTime)
                    @Html.HiddenFor(model => incidentSystemBilling.LastUpdatedBy)
                    @Html.HiddenFor(model => incidentSystemBilling.LastUpdatedDateTime)

                    <div class="box-footer">
                        <div class="btn-group">
                            <button class="btn btn-primary" type="submit" id="btnCreate">@Resources.global.Func_Create</button>
                            <button class="btn btn-primary" type="button" onclick="window.location = '@Url.Action("Index", "IncidentSystemBilling")';">@Resources.global.Func_Cancel</button>
                        </div>
                    </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $("input[type=checkbox][id^=ContactedBy]").on("click", function () {
            var sList = "";
            var i = 0;
            $("input[type=checkbox][id^=ContactedBy]").each(function(){
                if (this.checked) {
                    if (i == 0) {
                        sList = $(this).val();
                    } else {
                        sList = sList + ", " + $(this).val();
                    }
                    i++;
                }
            });
            $("#incidentSystemBilling_ContactedBy").val(sList);
        });

        $("input[type=checkbox][id^=MitigatingAction]").on("click", function () {
            var sList = "";
            var i = 0;
            $("input[type=checkbox][id^=MitigatingAction]").each(function () {
                if (this.checked) {
                    if (i == 0) {
                        sList = $(this).val();
                    } else {
                        sList = sList + ", " + $(this).val();
                    }
                    if ($(this).val() == "@(IncidentSystemBillingMitigatingAction.Others.ToEnumString())") {
                        sList = sList + " (" + $("#MitigatingAction@(IncidentSystemBillingMitigatingAction.Others)More").val() + ")";
                    }
                    i++;
                }
            });
            $("#incidentSystemBilling_MitigatingAction").val(sList);
        });

        $("#MitigatingAction@(IncidentSystemBillingMitigatingAction.Others)ore").change(function () {
            var sList = "";
            var i = 0;
            $("input[type=checkbox][id^=MitigatingAction]").each(function () {
                if (this.checked) {
                    if (i == 0) {
                        sList = $(this).val();
                    } else {
                        sList = sList + ", " + $(this).val();
                    }
                    if ($(this).val() == "@(IncidentSystemBillingMitigatingAction.Others.ToEnumString())") {
                        sList = sList + " (" + $("#MitigatingAction@(IncidentSystemBillingMitigatingAction.Others)More").val() + ")";
                    }
                    i++;
                }
            });
            $("#incidentSystemBilling_MitigatingAction").val(sList);
        });

        $("#incidentSystemBilling_IsDrillMode").on("click", function () {
            $(this).val(this.checked);
        });

        $('#incidentSystemBilling_RequireMitigatingAction').on("change", function () {
            if ($(this).val().toUpperCase() == "YES") {
                $('#CreateMitigatingAction').show();
            } else {
                $('#CreateMitigatingAction').hide();
            }
        });

        $(document).ready(function () {
            if ($('#incidentSystemBilling_RequireMitigatingAction').val().toUpperCase() == "YES") {
                $('#CreateMitigatingAction').show();
            } else {
                $('#CreateMitigatingAction').hide();
            }
        });

        $('#btnCreate').on('click', function (event) {
            var inputValid = true;
            var errMsg = '';

            if ($('#incidentSystemBilling_LevelOfSeverity').val() == '') {
                inputValid = false;
                errMsg = errMsg + 'Level Of Severity is required<br />';
            }

            if ($('#incidentSystemBilling_ProblemArea').val() == '') {
                inputValid = false;
                errMsg = errMsg + '\r\nProblem Area is required<br />';
            }

            if ($('#incidentSystemBilling_PossibleCause').val() == '') {
                inputValid = false;
                errMsg = errMsg + '\r\nPossible Cause is required<br />';
            }

            if ($('#incidentSystemBilling_BillingErrorSeriousness').val() == '') {
                inputValid = false;
                errMsg = errMsg + '\r\Billing Error Seriousness is required<br />';
            }

            if ($('#incidentSystemBilling_ExpectedAffectedCustomerBill').val() == '') {
                inputValid = false;
                errMsg = errMsg + '\r\nExpected Affected Customer Bill is required<br />';
            }

            if ($('#incidentSystemBilling_ContactedBy').val() == '') {
                inputValid = false;
                errMsg = errMsg + '\r\nContacted By is required<br />';
            }

            if ($('#incidentSystemBilling_Impact').val() == '') {
                inputValid = false;
                errMsg = errMsg + '\r\nImpact is required<br />';
            }

            if ($('#incidentSystemBilling_StatusUpdate').val() == '') {
                inputValid = false;
                errMsg = errMsg + '\r\nStatus Update is required<br />';
            }

            if (inputValid == false) {
                $('#CCCPModal').find('.modal-body').html(errMsg);
                $('#CCCPModal').find('.modal-title').html('Create Error');
                $('#CCCPModal').modal('toggle');

                event.preventDefault();
            }

            return inputValid;
        });
</script>
}
