@model CCCP.Business.Model.IncidentSystemBillingModel

@using CCCP.Common
@{
    ViewBag.Title = Resources.global.Menu_IncidentSystemBilling;

    CCCP.ViewModel.IncidentSystemBilling incidentSystemBilling = Model.Entity;
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
	    $(function() {
		    $('#accordion').on('show.bs.collapse', function () {
			    $('#HistoryIcon').removeClass("fa-angle-left");
			    $('#HistoryIcon').addClass("fa-angle-down");
		    });
		    $('#accordion').on('hide.bs.collapse', function () {
			    $('#HistoryIcon').removeClass("fa-angle-down");
			    $('#HistoryIcon').addClass("fa-angle-left");
		    });

		    $('#Checklists input[type="checkbox"]').each(function () {
			    value = $(this).val();
			    $(this).checkbox().chbxChecked(value == '2' ? true : (value == '0' ? false : null));
		    });

		    $('.bootstrap-checkbox').on('click', function(evnet){

		        $.ajax({
		            url: "/IncidentSystemBilling/ToggleActionStatus",
		            type: "POST",
		            data: JSON.stringify({ 'checklist': $(this).data('checklist'), 'checklistAction': $(this).data('checklistaction') }),
		            dataType: "html",
		            contentType: "application/json; charset=utf-8",
		            success: function (data) {
		                return true;
		            },
		            error: function () {
		                alert("An error has occured!!!");
		            }
		        });
		    });
	    });

	    $("input[type=checkbox][id^=ContactedBy]").on("click", function () {
	        var sList = "";
	        var i = 0;
	        $("input[type=checkbox][id^=ContactedBy]").each(function(){
	            if (this.checked) {
	                if (i == 0) {
	                    sList = $(this).val();
	                } else {
	                    sList = sList + ", " + $(this).val();
	                }
	                i++;
	            }
	        });
	        $("#incidentSystemBilling_ContactedBy").val(sList);
	    });

	    $("input[type=checkbox][id^=MitigatingAction]").on("click", function () {
	        var sList = "";
	        var i = 0;
	        $("input[type=checkbox][id^=MitigatingAction]").each(function () {
	            if (this.checked) {
	                if (i == 0) {
	                    sList = $(this).val();
	                } else {
	                    sList = sList + ", " + $(this).val();
	                }
	                if ($(this).val() == "@(IncidentSystemBillingMitigatingAction.Others.ToEnumString())") {
	                    sList = sList + " (" + $("#MitigatingAction@(IncidentSystemBillingMitigatingAction.Others)More").val() + ")";
	                }
	                i++;
	            }
	        });
	        $("#incidentSystemBilling_MitigatingAction").val(sList);
	    });

	    $("#MitigatingAction@(IncidentSystemBillingMitigatingAction.Others)More").change(function () {
	        var sList = "";
	        var i = 0;
	        $("input[type=checkbox][id^=MitigatingAction]").each(function () {
	            if (this.checked) {
	                if (i == 0) {
	                    sList = $(this).val();
	                } else {
	                    sList = sList + ", " + $(this).val();
	                }
	                if ($(this).val() == "@(IncidentSystemBillingMitigatingAction.Others.ToEnumString())") {
	                    sList = sList + " (" + $("#MitigatingAction@(IncidentSystemBillingMitigatingAction.Others)More").val() + ")";
	                }
	                i++;
	            }
	        });
	        $("#incidentSystemBilling_MitigatingAction").val(sList);
	    });

        $("#incidentSystemBilling_IsDrillMode").on("click", function () {
	        $(this).val(this.checked);
        });

        $('#incidentSystemBilling_RequireMitigatingAction').on("change", function () {
            if ($(this).val().toUpperCase() == "YES") {
                $('#EditMitigatingAction').show();

                var sList = "";
                var i = 0;
                $("input[type=checkbox][id^=MitigatingAction]").each(function () {
                    if (this.checked) {
                        if (i == 0) {
                            sList = $(this).val();
                        } else {
                            sList = sList + ", " + $(this).val();
                        }
                        if ($(this).val() == "@(IncidentSystemBillingMitigatingAction.Others.ToEnumString())") {
                            sList = sList + " (" + $("#MitigatingAction@(IncidentSystemBillingMitigatingAction.Others)More").val() + ")";
                        }
                        i++;
                    }
                });
                $("#incidentSystemBilling_MitigatingAction").val(sList);
            } else {
                $('#EditMitigatingAction').hide();
                $('#incidentSystemBilling_MitigatingAction').val('');
            }
        });

        $(document).ready(function () {
            if ($('#incidentSystemBilling_RequireMitigatingAction').val().toUpperCase() == "YES") {
                $('#EditMitigatingAction').show();
            } else {
                $('#EditMitigatingAction').hide();
            }
        });
    </script>
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        <i class="fa fa-clipboard"></i> <a href="@Url.Action("Index", "IncidentSystemBilling")">@Resources.global.Menu_IncidentManagement - @Resources.global.Func_Edit @Resources.global.Menu_IncidentSystemBilling</a>
    </h1>
</section>

<!-- Main content -->
<section class="content">
    <!-- Small boxes (Stat box) -->
    <div class="row">
        <div class="col-lg-12">
            <div class="row">
                <div class="col-lg-3 pull-left">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentSystemBilling.IncidentNo)</span>
                    <span class="pull-right">@Html.DisplayFor(model => incidentSystemBilling.IncidentNo)</span>
                </div>
                <div class="col-lg-3 pull-right">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentSystemBilling.IncidentStatus)</span>
                    <span class="pull-right">@Html.DisplayFor(model => incidentSystemBilling.IncidentStatus)</span>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-3 pull-left">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentSystemBilling.GeneralEnquiryId)</span>
                    <a href="#"><span class="pull-right">@(incidentSystemBilling.GeneralEnquiryId == 0 ? "" : incidentSystemBilling.GeneralEnquiryId.ToString())</span></a>
                </div>
                <div class="col-lg-3 pull-right">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentSystemBilling.CreatedDateTime)</span>
                    <span class="pull-right">@Html.DisplayFor(model => incidentSystemBilling.CreatedDateTime)</span>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-3 pull-left">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentSystemBilling.CrisisId)</span>
                    <a href="#"><span class="pull-right">@Html.DisplayFor(model => incidentSystemBilling.CrisisId)</span></a>
                </div>
                <div class="col-lg-3 pull-right">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentSystemBilling.LastUpdatedDateTime)</span>
                    <span class="pull-right">@Html.DisplayFor(model => incidentSystemBilling.LastUpdatedDateTime)</span>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <!-- content -->
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => incidentSystemBilling.IncidentSystemBillingId)
            <ul class="nav nav-pills">
                <li class="active"><a href="#IncidentDetails" data-toggle="tab">Incident Details</a></li>
                <li><a href="#Checklists" data-toggle="tab">Checklists</a></li>
                <li><a href="#IncidentEnquiry" data-toggle="tab">Chatroom</a></li>
                <li><a href="#LinkedIncident" data-toggle="tab">Linked Incidents</a></li>
            </ul>

            <div id="myTabContent" class="tab-content">

                <div class="tab-pane fade active in" id="IncidentDetails">
                    <div class="box box-primary">
                        <div class="box-body">
                            <div class="row">
                                <div class="col-lg-1"></div>
                                <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentSystemBilling.IncidentStatus)</label></div>
                                <div class="col-lg-4">
                                    <select id="incidentSystemBilling_IncidentStatus" name="incidentSystemBilling.IncidentStatus" class="form-control thin-control">
                                        @foreach (IncidentStatus one in Enum.GetValues(typeof(IncidentStatus)))
                                        {
                                            <option value="@one.ToEnumString()" @( one.ToEnumString() == incidentSystemBilling.IncidentStatus ? "selected" : "")>@one.ToEnumString()</option>
                                        }
                                    </select>
                                    @Html.ValidationMessageFor(model => incidentSystemBilling.IncidentStatus, "", new { @class = "text-danger" })
</div>
                            </div>

                            <div class="row">
                                <div class="col-lg-1"></div>
                                <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentSystemBilling.IncidentBackground)</label></div>
                                <div class="col-lg-4">
                                    @Html.EditorFor(model => incidentSystemBilling.IncidentBackground, new { htmlAttributes = new { @class = "form-control thin-control" } })
                                    @Html.ValidationMessageFor(model => incidentSystemBilling.IncidentBackground, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-1"></div>
                                <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentSystemBilling.IsDrillMode)</label></div>
                                <div class="col-lg-4">
                                    <div class="checkbox">
                                        <input id="incidentSystemBilling_IsDrillMode" name="incidentSystemBilling.IsDrillMode" type="checkbox" value="" @(incidentSystemBilling.IsDrillMode != null && incidentSystemBilling.IsDrillMode.Value ? "checked" : "") style="top:-10px; left: 20px" />
                                        @Html.ValidationMessageFor(model => incidentSystemBilling.IsDrillMode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <fieldset class="scheduler-border">
                                <legend class="scheduler-border">Details</legend>

                                <div class="row">
                                    <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentSystemBilling.ProblemArea)</label></div>
                                    <div class="col-lg-6">
                                        <select id="incidentSystemBilling_ProblemArea" name="incidentSystemBilling.ProblemArea" class="form-control thin-control">
                                            <option value=""></option>
                                            @foreach (IncidentSystemBillingProblemArea one in Enum.GetValues(typeof(IncidentSystemBillingProblemArea)))
                                            {
                                            <option value="@one.ToEnumString()" @(one.ToEnumString() == incidentSystemBilling.ProblemArea ? "selected" : "")>@one.ToEnumString()</option>
                                            }
                                        </select>
                                        @Html.ValidationMessageFor(model => incidentSystemBilling.ProblemArea, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentSystemBilling.PossibleCause)</label></div>
                                    <div class="col-lg-6">
                                        <select id="incidentSystemBilling_PossibleCause" name="incidentSystemBilling.PossibleCause" class="form-control thin-control">
                                            <option value=""></option>
                                            @foreach (IncidentSystemBillingPossibleCause one in Enum.GetValues(typeof(IncidentSystemBillingPossibleCause)))
                                            {
                                                <option value="@one.ToEnumString()" @(one.ToEnumString() == incidentSystemBilling.PossibleCause ? "selected" : "")>@one.ToEnumString()</option>
                                            }
                                        </select>
                                        @Html.ValidationMessageFor(model => incidentSystemBilling.PossibleCause, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentSystemBilling.ExpectedAffectedCustomerBill)</label></div>
                                    <div class="col-lg-6">
                                        @Html.EditorFor(model => incidentSystemBilling.ExpectedAffectedCustomerBill, new { htmlAttributes = new { @class = "form-control thin-control" } })
                                        @Html.ValidationMessageFor(model => incidentSystemBilling.ExpectedAffectedCustomerBill, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentSystemBilling.ContactedBy)</label></div>
                                    <div class="col-lg-6">
                                        @{
                                    int countContactedBy = 0;
                                    foreach (IncidentSystemBillingContactedBy one in Enum.GetValues(typeof(IncidentSystemBillingContactedBy)))
                                    {
                                        <input id="ContactedBy@(countContactedBy.ToString())" type="checkbox" value="@one.ToEnumString()" @(incidentSystemBilling.ContactedBy != null ? (incidentSystemBilling.ContactedBy.IsContains(one.ToEnumString()) ? "checked" : "") : "") /><label for="ContactedBy@(countContactedBy.ToString())"> @one.ToEnumString()</label><br />
                                        countContactedBy++;
                                    }
                                        }
                                        @Html.HiddenFor(model => incidentSystemBilling.ContactedBy, new { @Value = incidentSystemBilling.ContactedBy })
                                        @Html.ValidationMessageFor(model => incidentSystemBilling.ContactedBy, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentSystemBilling.Impact)</label></div>
                                    <div class="col-lg-6">
                                        @Html.EditorFor(model => incidentSystemBilling.Impact, new { htmlAttributes = new { @class = "form-control thin-control" } })
                                        @Html.ValidationMessageFor(model => incidentSystemBilling.Impact, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentSystemBilling.StatusUpdate)</label></div>
                                    <div class="col-lg-6">
                                        <select id="incidentSystemBilling_StatusUpdate" name="incidentSystemBilling.StatusUpdate" class="form-control thin-control">
                                            <option value=""></option>
                                            @foreach (IncidentSystemBillingStatusUpdate one in Enum.GetValues(typeof(IncidentSystemBillingStatusUpdate)))
                                            {
                                            <option value="@one.ToEnumString()" @(one.ToEnumString() == incidentSystemBilling.StatusUpdate ? "selected": "" )>@one.ToEnumString()</option>
                                            }
                                        </select>
                                        @Html.ValidationMessageFor(model => incidentSystemBilling.StatusUpdate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentSystemBilling.RequireMitigatingAction)</label></div>
                                    <div class="col-lg-6">
                                        <select id="incidentSystemBilling_RequireMitigatingAction" name="incidentSystemBilling.RequireMitigatingAction" class="form-control thin-control">
                                            <option value=""></option>
                                            @foreach (IncidentSystemBillingRequireMitigatingAction one in Enum.GetValues(typeof(IncidentSystemBillingRequireMitigatingAction)))
                                            {
                                                <option value="@one.ToEnumString()" @(one.ToEnumString() == incidentSystemBilling.RequireMitigatingAction ? "selected" : "")>@one.ToEnumString()</option>
                                            }
                                        </select>
                                        @Html.ValidationMessageFor(model => incidentSystemBilling.RequireMitigatingAction, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="row" id="EditMitigatingAction">
                                    <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentSystemBilling.MitigatingAction)</label></div>
                                    <div class="col-lg-6">
                                        @{
                                        int countMitigatingAction = 0;
                                        foreach (IncidentSystemBillingMitigatingAction one in Enum.GetValues(typeof(IncidentSystemBillingMitigatingAction)))
                                        {
                                            <input id="MitigatingAction@(countMitigatingAction.ToString())" type="checkbox" value="@one.ToEnumString()" @(incidentSystemBilling.MitigatingAction != null ? (incidentSystemBilling.MitigatingAction.IsContains(one.ToEnumString()) ? "checked" : "") : "") /><label for="MitigatingAction@(countMitigatingAction.ToString())"> @one.ToEnumString()</label>
                                        if (one != IncidentSystemBillingMitigatingAction.Others)
                                        {
                                            <br />
                                        }
                                        else
                                        {
                                            string sMore = "";
                                            if (incidentSystemBilling.MitigatingAction != null && incidentSystemBilling.MitigatingAction.IsContains(one.ToEnumString()))
                                            {
                                                sMore = incidentSystemBilling.MitigatingAction.Substring(incidentSystemBilling.MitigatingAction.IndexOf('(') + 1, incidentSystemBilling.MitigatingAction.IndexOf(')') - incidentSystemBilling.MitigatingAction.IndexOf('(') - 1);
                                            }
                                            <input id="MitigatingAction@(one)More" name="MitigatingAction@(one)More" type="text" value="@sMore" class="form-control thin-control text-box pull-right" style="width:70%" />
                                        }
                                        countMitigatingAction++;
                                        }
                                        }
                                        @Html.HiddenFor(model => incidentSystemBilling.MitigatingAction, new { @Value = incidentSystemBilling.MitigatingAction })
                                        @Html.ValidationMessageFor(model => incidentSystemBilling.MitigatingAction, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </fieldset>

                            @Html.HiddenFor(model => incidentSystemBilling.IncidentSystemBillingId, new { @Value = incidentSystemBilling.IncidentSystemBillingId })
                            @Html.HiddenFor(model => incidentSystemBilling.ChecklistBatchId, new { @Value = incidentSystemBilling.ChecklistBatchId })
                            @Html.HiddenFor(model => incidentSystemBilling.ChatRoomId, new { @Value = incidentSystemBilling.ChatRoomId })
                            @Html.HiddenFor(model => incidentSystemBilling.GeneralEnquiryId, new { @Value = incidentSystemBilling.GeneralEnquiryId })
                            @Html.HiddenFor(model => incidentSystemBilling.CrisisId, new { @Value = incidentSystemBilling.CrisisId })
                            @Html.HiddenFor(model => incidentSystemBilling.NotificationId, new { @Value = incidentSystemBilling.NotificationId })
                            @Html.HiddenFor(model => incidentSystemBilling.IssueById, new { @Value = incidentSystemBilling.IssueById })
                            @Html.HiddenFor(model => incidentSystemBilling.IssueDateTime, new { @Value = incidentSystemBilling.IssueDateTime == null ? "" : incidentSystemBilling.IssueDateTime.Value.ToString("yyyy-MM-dd tthh:mm:ss") })
                            @Html.HiddenFor(model => incidentSystemBilling.CloseById, new { @Value = incidentSystemBilling.CloseById })
                            @Html.HiddenFor(model => incidentSystemBilling.CloseDateTime, new { @Value = incidentSystemBilling.CloseDateTime == null ? "" : incidentSystemBilling.CloseDateTime.Value.ToString("yyyy-MM-dd tthh:mm:ss") })
                            @Html.HiddenFor(model => incidentSystemBilling.CreatedBy, new { @Value = incidentSystemBilling.CreatedBy })
                            @Html.HiddenFor(model => incidentSystemBilling.CreatedDateTime, new { @Value = incidentSystemBilling.CreatedDateTime == null ? "" : incidentSystemBilling.CreatedDateTime.Value.ToString("yyyy-MM-dd tthh:mm:ss") })
                            @Html.HiddenFor(model => incidentSystemBilling.LastUpdatedBy, new { @Value = incidentSystemBilling.LastUpdatedBy })
                            @Html.HiddenFor(model => incidentSystemBilling.LastUpdatedDateTime, new { @Value = incidentSystemBilling.LastUpdatedDateTime == null ? "" : incidentSystemBilling.LastUpdatedDateTime.Value.ToString("yyyy-MM-dd tthh:mm:ss") })
                            @Html.HiddenFor(model => incidentSystemBilling.History, new { @Value = incidentSystemBilling.History })
                            @Html.HiddenFor(model => incidentSystemBilling.IncidentNo, new { @Value = incidentSystemBilling.IncidentNo })
                            @Html.HiddenFor(model => incidentSystemBilling.LevelOfSeverity, new { @Value = incidentSystemBilling.LevelOfSeverity })
                            @Html.HiddenFor(model => incidentSystemBilling.BillingErrorSeriousness, new { @Value = incidentSystemBilling.BillingErrorSeriousness })
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->
                </div>

                <div class="tab-pane fade" id="Checklists">
                    <div class="box box-primary">
                        <div class="box-body">
                            <div class="col-lg-2">
                                <fieldset class="scheduler-border">
                                    <legend class="scheduler-border">Legend</legend>

                                    <div class="row">
                                        <div class="col-lg-2"><div class="bootstrap-checkbox"></div></div>
                                        <div class="col-lg-10">Pending</div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-2"><div class="bootstrap-checkbox"><i class="fa fa-minus"></i></div></div>
                                        <div class="col-lg-10">In Progress</div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-2"><div class="bootstrap-checkbox"><i class="fa fa-check"></i></div></div>
                                        <div class="col-lg-10">Completed</div>
                                    </div>
                                </fieldset>
                            </div>
                            <div class="col-lg-8">
                                <ul class="nav nav-pills">
                                    @{
                                int countChecklist = 1;
                                foreach (CCCP.Business.Model.ChecklistModel checklist in Model.Checklists)
                                {
                                    <li @(countChecklist == 1 ? "class=active" : "")><a href="#list@(countChecklist)" data-toggle="tab">@(checklist.Entity.Department)</a></li>
                                    countChecklist++;
                                }
                                    }
                                </ul>
                                <div id="TabList" class="tab-content">
                                    @{
                                countChecklist = 1;
                                foreach (CCCP.Business.Model.ChecklistModel checklist in Model.Checklists)
                                {
                                    int countChecklistAction = 1;
                                    <div class="tab-pane fade @(countChecklist == 1 ? "active in" : "")" id="list@(countChecklist)">
                                        <table class="table table-striped table-bordered" cellspacing="0" width="100%">
                                            <thead>
                                            <th></th>
                                            <th>Action</th>
                                            <th>Completed By</th>
                                            <th>Completed Datetime</th>
                                            </thead>
                                            <tbody>
                                                @foreach (CCCP.Business.Model.ChecklistActionModel action in checklist.ChecklistActions)
                                                {
                                                    <tr>
                                                        <td><input type="checkbox" value="@Convert.ToInt32(action.ActionStatus)" data-checklist="@(countChecklist-1)" data-checklistaction="@(countChecklistAction-1)"></td>
                                                        <td><span @(@action.IsCompulsory ? "class=mandatory-field" : "")></span>@action.Entity.Action</td>
                                                        <td>@(action.ActionStatus == CCCP.Common.CheckListActionStatus.Completed ? action.Entity.LastUpdatedBy : "")</td>
                                                        <td>@((action.ActionStatus == CCCP.Common.CheckListActionStatus.Completed ? action.Entity.LastUpdatedDateTime == null ? "" : action.Entity.LastUpdatedDateTime.Value.ToString("yyyy-MM-dd tthh:mm:ss") : ""))</td>
                                                    </tr>
                                                    countChecklistAction++;
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                                countChecklist++;
                                }
                                    }
                                </div>
                            </div>
                            <div class="col-lg-2"></div>
                        </div>
                    </div>
                </div>

                <div class="tab-pane fade" id="IncidentEnquiry">
                    <div class="box box-primary">
                        <div class="box-body">
                            <div class="col-lg-2"></div>
                            <div class="col-lg-8">
                                <div id="chat" style="height: 400px;overflow-y: scroll;">
                                    <div class="bubble you">
                                        <label>Peter</label><br>
                                        What happened?<br>
                                        <h6 align="right">11:46</h6>
                                    </div>
                                    <div class="bubble me">
                                        Someone got cut.<br>
                                        <h6 align="right">11:52</h6>
                                    </div>
                                    <div class="bubble you">
                                        <label>John</label><br>
                                        Is it serious?<br>
                                        <h6 align="right">11:55</h6>
                                    </div>
                                </div>
                                <div id="SendMessage">
                                    <textarea rows="4" cols="150"></textarea>
                                </div>
                            </div>
                            <div class="col-lg-2"></div>
                        </div>
                    </div>
                </div>

                <div class="tab-pane fade" id="LinkedIncident">
                    <div class="box box-primary">
                        <div class="box-body">
                            <div class="col-lg-2"></div>
                            <div class="col-lg-8">
                                <div style="height: 400px">
                                </div>
                            </div>
                            <div class="col-lg-2"></div>
                        </div>
                    </div>
                </div>

            </div>

            <div>
                <div class="btn-group">
                    <button class="btn btn-primary" type="submit">@Resources.global.Func_Update</button>
                    <button class="btn btn-primary" type="button" onclick="window.location = '@Url.Action("Details", "IncidentSystemBilling", new { id = incidentSystemBilling.IncidentSystemBillingId })';">@Resources.global.Func_Cancel</button>
                </div>
            </div>
            <br />
}
            <div class="panel-group" id="accordion">
                <div class="panel panel-default">
                    <a data-toggle="collapse" data-parent="#accordion" href="#History">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                @Resources.global.Label_History <i id="HistoryIcon" class="fa fa-angle-left"></i>
                            </h4>
                        </div>
                    </a>
                    <div id="History" class="panel-collapse collapse">
                        <div class="panel-body multiline">
                            @Html.Raw(incidentSystemBilling.History)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section><!-- /.content -->