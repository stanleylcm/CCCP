@model CCCP.Business.Model.ChatRoomModel

@using CCCP.Business.Service
@using CCCP.Business.Model
@using CCCP.Common
@using CCCP.ViewModel

<div id="chat" class="direct-chat-messages" style="height: 400px;overflow-y: scroll; border: solid; border-width: 1px">
    @{
        CCCP.Helpers.SessionHelper sessionHelper = new CCCP.Helpers.SessionHelper();
        UserModel user = sessionHelper.CurrentUser;

        foreach (var crMsg in Model.ChatRoomMessagesEntites)
        {
            Boolean isMe = (crMsg.Entity.SenderUserId == user.Entity.UserId);
    <!-- Message. Default to the @(isMe ? "right" : "left") -->
    <div id="@crMsg.Entity.ChatRoomMessageId" class="direct-chat-msg@(isMe ? " right" : "")">
        <div class="direct-chat-info clearfix">
            <span class="direct-chat-name pull-@(isMe ? "right" : "left")"><label>@crMsg.Entity.SenderDisplayName</label></span>
            <span class="direct-chat-timestamp pull-@(crMsg.Entity.SenderUserId == user.Entity.UserId ? "left" : "right")">@crMsg.Entity.SendDateTime.Value.ToString("yyyy-MM-dd HH:mm:ss")</span>
        </div>
        <!-- /.direct-chat-info -->
        <div class="direct-chat-text">
            @{
                foreach (ChatRoomAttachment attach in crMsg.ChatRoomAttachmentsEntities)
                {
                    if (attach.AttachmentType == ".jpg")
                    {
                        var imgSrc = String.Format("data:image/jpg;base64,{0}", Convert.ToBase64String(attach.Attachment));
            <img src="@imgSrc" /><br/>
                    }
                    if (attach.AttachmentType == ".mp4")
                    {
                        var videoSrc = String.Format("data:video/mp4;base64,{0}", Convert.ToBase64String(attach.Attachment));
            <video width="400" height="300" controls><source src="@videoSrc" type="video/mp4" /></video><br />
                    }
                }
            }
            @Html.Raw(crMsg.Entity.Message.Replace("\n", "<br/>").Replace(System.Environment.NewLine, "<br/>"))
        </div>
        <!-- /.direct-chat-text -->
    </div>
    <!-- /.direct-chat-msg -->
        }
    }
</div>
<div class="box">
    <div class="box-body">
        <div id="SendMessage" class="input-group">
            <span class="input-group-btn">
                <a class='btn btn-primary btn-flat' href='javascript:;'>
                    <i class="glyphicon glyphicon-paperclip"></i>
                    <input id="attachUI" type="file" style='position:absolute;z-index:2;top:0;left:0;filter: alpha(opacity=0);-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";opacity:0;background-color:transparent;color:transparent;' name="file_source" size="40">
                </a>
            </span>
            <div>
                <textarea name="message" id="message" placeholder="Type Message ..." class="form-control"></textarea><br />
            </div>
            <span class="input-group-btn">
                <button type="button" id="sendmessage" title="Send" class="btn btn-primary btn-flat">
                    <i class="glyphicon glyphicon-send"></i>
                </button>
            </span>
        </div>

        <div id="attachment_list">
        </div>
    </div>

    <div class="overlay" style="display:none">
        <i class="fa fa-refresh fa-spin"></i>
    </div>
</div>

<script>

    function translateMsg(inputMsg, outputDiv) {
        $.ajax({
            url: "/Home/TranslateText",
            type: "POST",
            data: JSON.stringify({ 'input': inputMsg }),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                if (data.result) {
                    $("#" + outputDiv).html(data.translatedText);
                }
            },
            error: function () {
                alert("An error has occured!!!");
            }
        });
    }

    $('#attachUI').on('change', function (e) {
        $('#attachment_list').html("");
        if (!e.target.files) return;

        if (e.target.files.length > 0) {
            $('#attachment_list').append("<label>Attachment List:</label><br/>");
        }
        
        $.each(e.target.files, function (index, file) {
            $('#attachment_list').append("<span class='label label-info'>" + file.name + "</span><br/>");
        });
    });

    function encode(data) {
        var str = "";
        for (var i = 0; i < data.length; i++)
            str += String.fromCharCode(data[i]);

        return btoa(str).split(/(.{75})/).join("\n").replace(/\n+/g, "\n").trim();
    }

    function generateChatBubbleHtml(messageId, message, name, time, isMe) {
        // get attachment by messageId?
        var data = new FormData();
        data.append("messageId", messageId);

        $.ajax({
            url: "/ChatRoom/GetMessageAttachment",
            type: "POST",
            contentType: false,
            processData: false,
            data: data,
            success: function (data) {
                var attachment = '';
                if (data.result) {
                    $.each(data.attachmentList, function (i, attach) {
                        if (attach.AttachmentType == '.jpg') {
                            attachment += '<img src="data:image/jpg;base64,' + encode(attach.Attachment) + '" /><br/>';
                        }
                        if (attach.AttachmentType == '.mp4') {
                            attachment += '<video width="400" height="300" controls><source src="data:image/jpg;base64,' + encode(attach.Attachment) + '" type="video/mp4" /></video><br/>';
                        }
                    });

                    var html = '<div id="' + messageId + '" class="direct-chat-msg' + (isMe ? ' right' : '') + '">' +
                        '<div class="direct-chat-info clearfix">' +
                            '<span class="direct-chat-name pull-' + (isMe ? 'right' : 'left') + '"><label>' + name + '</label></span>' +
                            '<span class="direct-chat-timestamp pull-' + (isMe ? 'left' : 'right') + '">' + time + '</span>' +
                        '</div>' +
                        '<div class="direct-chat-text">' + attachment + message.replace(new RegExp('\n', 'g'), '<br/>') + '</div>' +
                    '</div>';

                    $('#chat').append(html);
                    $("#chat").scrollTop($("#chat")[0].scrollHeight);
                }
            },
            error: function () {
                alert("An error has occured!!!");
            }
        });
    }

    $(document).ready(function () {
        $("#chat").scrollTop($("#chat")[0].scrollHeight);
    });

    $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
        $('#chat').scrollTop($("#chat")[0].scrollHeight);
    });

    $(function () {
        // Declare a proxy to reference the hub.
        var chatHub = $.connection.chatRoomHub;
        // Create a function that the hub can call to broadcast messages.
        chatHub.client.broadcastMessage = function (name, message, time, chatId, messageId) {

            if (chatId != '@Model.Entity.ChatRoomId') return;

            // Html encode display name and message.
            var encodedName = $('<div />').text(name).html();
            var encodedMsg = $('<div />').text(message).html();
            // Add the message to the page.
            var isMe = (encodedName == '@user.Entity.DisplayName');
            generateChatBubbleHtml(messageId, encodedMsg, encodedName, time, isMe)
        };

        // Set initial focus to message input box.
        $('#message').focus();

        // Start the connection.
        $.connection.hub.start().done(function () {
            $('#sendmessage').click(function () {
                if ($('#message').val().trim() == '') return false;

                $('.overlay').css("display", "");

                var data = new FormData();
                $.each($("#attachUI").get(0).files, function (i, f) {
                    data.append("uploadData", f);
                });

                data.append("chatRoomId", '@Model.Entity.ChatRoomId');
                data.append("senderUserId", '@user.Entity.UserId');
                data.append("senderDisplayName", '@user.Entity.DisplayName');
                data.append("sendDateTime", moment().format('YYYY-MM-DD HH:mm:ss'));
                data.append("message", $('#message').val());

                // upload file to temp and send message to Hub...
                $.ajax({
                    url: "/ChatRoom/SaveChatRoomMessageAttachment",
                    type: "POST",
                    contentType: false,
                    processData: false,
                    data: data,
                    success: function (data) {

                        $('.overlay').css("display", "none");

                        if (data.result) {

                            // Call the Send method on the hub.
                            chatHub.server.send('@user.Entity.DisplayName', $('#message').val(), moment().format('YYYY-MM-DD HH:mm:ss'), '@user.Entity.UserId', '@Model.Entity.ChatRoomId', data.id);
    
                            // Clear text box and reset focus for next comment.
                            $('#attachUI').val('');
                            $('#attachment_list').html('');
                            $('#message').val('').focus();
                        }
                    },
                    error: function () {
                        alert("An error has occured!!!");
                    }
                });
            });

            $('#message').keydown(function (event) {
                if (event.which == 13 && !event.shiftKey) {
                    event.preventDefault();
                    $('#sendmessage').click();
                }
            });
        });
    });

</script>