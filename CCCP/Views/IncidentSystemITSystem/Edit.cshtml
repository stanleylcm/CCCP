@model CCCP.Business.Model.IncidentSystemITSystemModel

@using CCCP.Common
@{
    ViewBag.Title = Resources.global.Menu_IncidentSystemITSystem;
    CCCP.ViewModel.IncidentSystemITSystem incidentSystemITSystem = Model.Entity;
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
	    $(function() {
		    $('#accordion').on('show.bs.collapse', function () {
			    $('#HistoryIcon').removeClass("fa-angle-left");
			    $('#HistoryIcon').addClass("fa-angle-down");
		    });
		    $('#accordion').on('hide.bs.collapse', function () {
			    $('#HistoryIcon').removeClass("fa-angle-down");
			    $('#HistoryIcon').addClass("fa-angle-left");
		    });

		    $('#Checklists input[type="checkbox"]').each(function () {
			    value = $(this).val();
			    $(this).checkbox().chbxChecked(value == '2' ? true : (value == '0' ? false : null));
		    });

		    $('.bootstrap-checkbox').on('click', function(evnet){

		        $.ajax({
		            url: "/IncidentSystemITSystem/ToggleActionStatus",
		            type: "POST",
		            data: JSON.stringify({ 'checklist': $(this).data('checklist'), 'checklistAction': $(this).data('checklistaction') }),
		            dataType: "html",
		            contentType: "application/json; charset=utf-8",
		            success: function (data) {
		                return true;
		            },
		            error: function () {
		                alert("An error has occured!!!");
		            }
		        });
		    });
	    });

	    $("input[type=checkbox][id^=AffectedSystem]").on("click", function () {
	        var sList = "";
	        var i = 0;
	        $("input[type=checkbox][id^=AffectedSystem]").each(function () {
	            if (this.checked) {
	                if (i == 0) {
	                    sList = $(this).val();
	                } else {
	                    sList = sList + ", " + $(this).val();
	                }
	                i++;
	            }
	        });
	        $("#incidentSystemITSystem_AffectedSystem").val(sList);
	    });

	    $("input[type=checkbox][id^=AffectedArea]").on("click", function () {
	        var sList = "";
	        var i = 0;
	        $("input[type=checkbox][id^=AffectedArea]").each(function () {
	            if (this.checked) {
	                if (i == 0) {
	                    sList = $(this).val();
	                } else {
	                    sList = sList + ", " + $(this).val();
	                }
	                i++;
	            }
	        });
	        $("#incidentSystemITSystem_AffectedArea").val(sList);
	    });

	    $("#incidentSystemITSystem_IsDrillMode").on("click", function () {
	        $(this).val(this.checked);
	    });

	    $("#FullRestorationDate").change(function () {
	        $("#incidentSystemITSystem_FullRestoration").val($("#FullRestorationDate").val() + " " + $("#FullRestorationTime").val());
	    });

	    $("#FullRestorationTime").change(function () {
	        $("#incidentSystemITSystem_FullRestoration").val($("#FullRestorationDate").val() + " " + $("#FullRestorationTime").val());
	    });

	    $("#ExpectedRestorationTimeDate").change(function () {
	        $("#incidentSystemITSystem_ExpectedRestorationTime").val($("#ExpectedRestorationTimeDate").val() + " " + $("#ExpectedRestorationTimeTime").val());
	    });

	    $("#ExpectedRestorationTimeTime").change(function () {
	        $("#incidentSystemITSystem_ExpectedRestorationTime").val($("#ExpectedRestorationTimeDate").val() + " " + $("#ExpectedRestorationTimeTime").val());
	    });

	    $(document).ready(function () {
	        $("#incidentSystemITSystem_IsDrillMode").val($("#incidentSystemITSystem_IsDrillMode").checked);

	        $('#FullRestorationDate').datepicker({ dateFormat: 'yy-mm-dd' }).datepicker('setDate', '@(incidentSystemITSystem.FullRestoration == null ? "" : incidentSystemITSystem.FullRestoration.Value.ToString("yyyy-MM-dd"))');
	        $('#ExpectedRestorationTimeDate').datepicker({ dateFormat: 'yy-mm-dd' }).datepicker('setDate', '@(incidentSystemITSystem.ExpectedRestorationTime == null ? "" : incidentSystemITSystem.ExpectedRestorationTime.Value.ToString("yyyy-MM-dd"))');
	        $('[data-mask]').inputmask();
	        $('#FullRestorationTime').timepicker({
	            showMeridian: false,
	            defaultTime: '@(incidentSystemITSystem.FullRestoration == null ? "" : incidentSystemITSystem.FullRestoration.Value.ToString("HH:mm"))',
	            hour: '@(incidentSystemITSystem.FullRestoration == null ? "" : incidentSystemITSystem.FullRestoration.Value.ToString("HH"))',
	            minute: '@(incidentSystemITSystem.FullRestoration == null ? "" : incidentSystemITSystem.FullRestoration.Value.ToString("mm"))',
	        });

	        $('#ExpectedRestorationTimeTime').timepicker({
	            showMeridian: false,
	            defaultTime: '@(incidentSystemITSystem.ExpectedRestorationTime == null ? "" : incidentSystemITSystem.ExpectedRestorationTime.Value.ToString("HH:mm"))',
	            hour: '@(incidentSystemITSystem.ExpectedRestorationTime == null ? "" : incidentSystemITSystem.ExpectedRestorationTime.Value.ToString("HH"))',
	            minute: '@(incidentSystemITSystem.ExpectedRestorationTime == null ? "" : incidentSystemITSystem.ExpectedRestorationTime.Value.ToString("mm"))',
	        });
	    });

        $('#btnUpdate').on('click', function (event) {
            var inputValid = true;
            var errMsg = '';

            if ($('#incidentSystemITSystem_LevelOfSeverity').val() == '') {
                inputValid = false;
                errMsg = errMsg + 'Level Of Severity cannot be empty<br />';
            }

            if ($('#incidentSystemITSystem_IncidentBackground').val() == '') {
                inputValid = false;
                errMsg = errMsg + 'Incident Background cannot be empty<br />';
            }

            if ($('#incidentSystemITSystem_PossibleCause').val() == '') {
                inputValid = false;
                errMsg = errMsg + '\r\nPossible Cause cannot be empty<br />';
            }

            if ($('#incidentSystemITSystem_AffectedSystem').val() == '') {
                inputValid = false;
                errMsg = errMsg + '\r\nAffected System Time cannot be empty<br />';
            }

            if ($('#incidentSystemITSystem_AffectedArea').val() == '') {
                inputValid = false;
                errMsg = errMsg + '\r\nAffected Area cannot be empty<br />';
            }

            if ($('#incidentSystemITSystem_ExpectedRestorationTIme').val() == '') {
                inputValid = false;
                errMsg = errMsg + '\r\nExpected Restoration Time cannot be empty<br />';
            }

            if ($('#incidentSystemITSystem_FullRestoration').val() == '') {
                inputValid = false;
                errMsg = errMsg + '\r\nFull Restoration cannot be empty<br />';
            }

            if (inputValid == false) {
                $('#CCCPModal').find('.modal-body').html(errMsg);
                $('#CCCPModal').find('.modal-title').html('Validation Summary');
                $('#CCCPModal').modal('toggle');

                event.preventDefault();
            }

            return inputValid;
        });
    </script>
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        <i class="fa fa-clipboard"></i> <a href="@Url.Action("Index", "IncidentSystemITSystem")">@Resources.global.Menu_IncidentManagement - @Resources.global.Func_Edit @Resources.global.Menu_IncidentSystemITSystem</a>
    </h1>
</section>

<!-- Main content -->
<section class="content">
    <!-- Small boxes (Stat box) -->
    <div class="row">
        <div class="col-lg-12">
            <div class="row">
                <div class="col-lg-3 pull-left">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentSystemITSystem.IncidentNo)</span>
                    <span class="pull-right">@Html.DisplayFor(model => incidentSystemITSystem.IncidentNo)</span>
                </div>
                <div class="col-lg-3 pull-right">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentSystemITSystem.IncidentStatus)</span>
                    <span class="pull-right">@Html.DisplayFor(model => incidentSystemITSystem.IncidentStatus)</span>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-3 pull-left">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentSystemITSystem.CrisisId)</span>
                    <a href="#"><span class="pull-right">@Html.DisplayFor(model => incidentSystemITSystem.CrisisId)</span></a>
                </div>
                <div class="col-lg-3 pull-right">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentSystemITSystem.CreatedDateTime)</span>
                    <span class="pull-right">@Html.DisplayFor(model => incidentSystemITSystem.CreatedDateTime)</span>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-3 pull-right">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentSystemITSystem.LastUpdatedDateTime)</span>
                    <span class="pull-right">@Html.DisplayFor(model => incidentSystemITSystem.LastUpdatedDateTime)</span>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <!-- content -->
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => incidentSystemITSystem.IncidentSystemITSystemId)
            <ul class="nav nav-pills">
                <li class="active"><a href="#IncidentDetails" data-toggle="tab">Incident Details</a></li>
                <li><a href="#Checklists" data-toggle="tab">Checklists</a></li>
                <li><a href="#IncidentEnquiry" data-toggle="tab">Chatroom</a></li>
                <li><a href="#LinkedIncident" data-toggle="tab">Linked Incidents</a></li>
                <li><a href="#LinkedGeneralEnquiry" data-toggle="tab">Linked General Enquiry</a></li>
            </ul>

            <div id="myTabContent" class="tab-content">

                <div class="tab-pane fade active in" id="IncidentDetails">
                    <div class="box box-primary">
                        <div class="box-body">
						
							<div class="panel-group">
								<div class="panel panel-default">
									<div class="panel panel-body">
										<div class="row">
											<div class="col-lg-1"></div>
											<div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentSystemITSystem.LevelOfSeverity)</label></div>
											<div class="col-lg-4">
												<select id="incidentSystemITSystem_LevelOfSeverity" name="incidentSystemITSystem.LevelOfSeverity" class="form-control thin-control">
													@foreach (IncidentLevel one in Enum.GetValues(typeof(IncidentLevel)))
													{
														if (one != IncidentLevel.None)
														{
															<option value="@(Convert.ToInt32(one))" @( (Convert.ToInt32(one)).ToString() == incidentSystemITSystem.LevelOfSeverity ? "selected" : "")>@one.ToEnumString()</option>
														}
													}
												</select>
												@Html.ValidationMessageFor(model => incidentSystemITSystem.LevelOfSeverity, "", new { @class = "text-danger" })
											</div>
										</div>

										@*<div class="row">
											<div class="col-lg-1"></div>
											<div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentSystemITSystem.IncidentStatus)</label></div>
											<div class="col-lg-4">
												<select id="incidentSystemITSystem_IncidentStatus" name="incidentSystemITSystem.IncidentStatus" class="form-control thin-control">
													<option value=""></option>
													@foreach (IncidentStatus one in Enum.GetValues(typeof(IncidentStatus)))
													{
														<option value="@one.ToEnumString()" @( one.ToEnumString() == incidentSystemITSystem.IncidentStatus ? "selected" : "")>@one.ToEnumString()</option>
													}
												</select>
												@Html.ValidationMessageFor(model => incidentSystemITSystem.IncidentStatus, "", new { @class = "text-danger" })
											</div>
										</div>*@

										<div class="row">
											<div class="col-lg-1"></div>
											<div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentSystemITSystem.IncidentBackground)</label></div>
											<div class="col-lg-4">
                                                @Html.EditorFor(model => incidentSystemITSystem.IncidentBackground, new { htmlAttributes = new { @class = "form-control", @style = "height:150px; width:400px" } })
												@Html.ValidationMessageFor(model => incidentSystemITSystem.IncidentBackground, "", new { @class = "text-danger" })
											</div>
										</div>

										<div class="row">
											<div class="col-lg-1"></div>
											<div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentSystemITSystem.IsDrillMode)</label></div>
											<div class="col-lg-4">
												<div class="checkbox">
													<input id="incidentSystemITSystem_IsDrillMode" name="incidentSystemITSystem.IsDrillMode" type="checkbox" value="" @(incidentSystemITSystem.IsDrillMode != null && incidentSystemITSystem.IsDrillMode.Value ? "checked" : "") style="top:-10px; left: 20px" />
													@Html.ValidationMessageFor(model => incidentSystemITSystem.IsDrillMode, "", new { @class = "text-danger" })
												</div>
											</div>
										</div>
									</div>
								</div>

								<div class="panel panel-primary">
									<div class="panel panel-heading"><label>@Resources.global.Label_Details</label></div>
									<div class="panel panel-body">

                                        <div class="row">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentSystemITSystem.Location)</label></div>
                                            <div class="col-lg-6">
                                                @Html.EditorFor(model => incidentSystemITSystem.Location, new { htmlAttributes = new { @class = "form-control thin-control" } })
                                                @Html.ValidationMessageFor(model => incidentSystemITSystem.Location, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentSystemITSystem.PossibleCause)</label></div>
                                            <div class="col-lg-6">
                                                @Html.EditorFor(model => incidentSystemITSystem.PossibleCause, new { htmlAttributes = new { @class = "form-control thin-control" } })
                                                @Html.ValidationMessageFor(model => incidentSystemITSystem.PossibleCause, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentSystemITSystem.Damage)</label></div>
                                            <div class="col-lg-6">
                                                @Html.EditorFor(model => incidentSystemITSystem.Damage, new { htmlAttributes = new { @class = "form-control thin-control" } })
                                                @Html.ValidationMessageFor(model => incidentSystemITSystem.Damage, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentSystemITSystem.AffectedSystem)</label></div>
                                            <div class="col-lg-6">
                                                @{
                                                    int countAffectedSystem = 0;
                                                    foreach (string one in Model.Options_AffectedSystem)
                                                    {
                                                        <input id="AffectedSystem@(countAffectedSystem.ToString())" type="checkbox" value="@one" @(incidentSystemITSystem.AffectedSystem.IsContains(one) ? "checked" : "")/><label for="AffectedSystem@(countAffectedSystem.ToString())"> @one</label><br />
                                                        countAffectedSystem++;
                                                    }
                                                }
                                                <input type="hidden" id="incidentSystemITSystem_AffectedSystem" name="incidentSystemITSystem.AffectedSystem" value="@incidentSystemITSystem.AffectedSystem" />
                                                @Html.ValidationMessageFor(model => incidentSystemITSystem.AffectedSystem, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentSystemITSystem.AffectedArea)</label></div>
                                            <div class="col-lg-6">
                                                                                                @{
                                                    int countAffectedArea = 0;
                                                    foreach (string one in Model.Options_AffectedArea)
                                                    {
                                                        <input id="AffectedArea@(countAffectedArea.ToString())" type="checkbox" value="@one" @(incidentSystemITSystem.AffectedArea.IsContains(one) ? "checked" : "") /><label for="AffectedArea@(countAffectedArea.ToString())"> @one</label><br />
                                                        countAffectedArea++;
                                                    }
                                                }
                                                <input type="hidden" id="incidentSystemITSystem_AffectedArea" name="incidentSystemITSystem.AffectedArea" value="@incidentSystemITSystem.AffectedArea" />
                                                @Html.ValidationMessageFor(model => incidentSystemITSystem.AffectedArea, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentSystemITSystem.ExpectedRestorationTime)</label></div>
                                            <div class="col-lg-6">
                                                <div class="col-lg-6">
                                                    <div class="input-group">
                                                        <div class="input-group-addon">
                                                            <i class="fa fa-calendar"></i>
                                                        </div>
                                                        <input type="text" class="form-control" id="ExpectedRestorationTimeDate" data-inputmask="'alias': 'yyyy-mm-dd'" data-mask></input>
                                                    </div>
                                                </div>
                                                <div class="col-lg-6">
                                                    <div class="input-group bootstrap-timepicker">
                                                        <div class="input-group-addon">
                                                            <i class="fa fa-clock-o"></i>
                                                        </div>
                                                        <input type="text" class="form-control timepicker" id="ExpectedRestorationTimeTime" data-inputmask="'alias': 'HH:mm'" data-mask></input>
                                                    </div>
                                                </div>
                                                @Html.HiddenFor(model => incidentSystemITSystem.ExpectedRestorationTime)
                                                @Html.ValidationMessageFor(model => incidentSystemITSystem.ExpectedRestorationTime, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentSystemITSystem.FullRestoration)</label></div>
                                            <div class="col-lg-6">
                                                <div class="col-lg-6">
                                                    <div class="input-group">
                                                        <div class="input-group-addon">
                                                            <i class="fa fa-calendar"></i>
                                                        </div>
                                                        <input type="text" class="form-control" id="FullRestorationDate" data-inputmask="'alias': 'yyyy-mm-dd'" data-mask></input>
                                                    </div>
                                                </div>
                                                <div class="col-lg-6">
                                                    <div class="input-group bootstrap-timepicker">
                                                        <div class="input-group-addon">
                                                            <i class="fa fa-clock-o"></i>
                                                        </div>
                                                        <input type="text" class="form-control timepicker" id="FullRestorationTime" data-inputmask="'alias': 'HH:mm'" data-mask></input>
                                                    </div>
                                                </div>
                                                @Html.HiddenFor(model => incidentSystemITSystem.FullRestoration)
                                                @Html.ValidationMessageFor(model => incidentSystemITSystem.FullRestoration, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
									</div>
								</div>
							</div>

                            @Html.HiddenFor(model => incidentSystemITSystem.IncidentSystemITSystemId, new { @Value = incidentSystemITSystem.IncidentSystemITSystemId })
                            @Html.HiddenFor(model => incidentSystemITSystem.ChecklistBatchId, new { @Value = incidentSystemITSystem.ChecklistBatchId })
                            @Html.HiddenFor(model => incidentSystemITSystem.ChatRoomId, new { @Value = incidentSystemITSystem.ChatRoomId })
                            @Html.HiddenFor(model => incidentSystemITSystem.GeneralEnquiryId, new { @Value = incidentSystemITSystem.GeneralEnquiryId })
                            @Html.HiddenFor(model => incidentSystemITSystem.CrisisId, new { @Value = incidentSystemITSystem.CrisisId })
                            @Html.HiddenFor(model => incidentSystemITSystem.NotificationId, new { @Value = incidentSystemITSystem.NotificationId })
                            @Html.HiddenFor(model => incidentSystemITSystem.IssueById, new { @Value = incidentSystemITSystem.IssueById })
                            @Html.HiddenFor(model => incidentSystemITSystem.IssueDateTime, new { @Value = incidentSystemITSystem.IssueDateTime == null ? "" : incidentSystemITSystem.IssueDateTime.Value.ToString("yyyy-MM-dd tthh:mm:ss") })
                            @Html.HiddenFor(model => incidentSystemITSystem.CloseById, new { @Value = incidentSystemITSystem.CloseById })
                            @Html.HiddenFor(model => incidentSystemITSystem.CloseDateTime, new { @Value = incidentSystemITSystem.CloseDateTime == null ? "" : incidentSystemITSystem.CloseDateTime.Value.ToString("yyyy-MM-dd tthh:mm:ss") })
                            @Html.HiddenFor(model => incidentSystemITSystem.CreatedBy, new { @Value = incidentSystemITSystem.CreatedBy })
                            @Html.HiddenFor(model => incidentSystemITSystem.CreatedDateTime, new { @Value = incidentSystemITSystem.CreatedDateTime == null ? "" : incidentSystemITSystem.CreatedDateTime.Value.ToString("yyyy-MM-dd tthh:mm:ss") })
                            @Html.HiddenFor(model => incidentSystemITSystem.LastUpdatedBy, new { @Value = incidentSystemITSystem.LastUpdatedBy })
                            @Html.HiddenFor(model => incidentSystemITSystem.LastUpdatedDateTime, new { @Value = incidentSystemITSystem.LastUpdatedDateTime == null ? "" : incidentSystemITSystem.LastUpdatedDateTime.Value.ToString("yyyy-MM-dd tthh:mm:ss") })
                            @Html.HiddenFor(model => incidentSystemITSystem.History, new { @Value = incidentSystemITSystem.History })
                            @Html.HiddenFor(model => incidentSystemITSystem.IncidentNo, new { @Value = incidentSystemITSystem.IncidentNo })
                            @Html.HiddenFor(model => incidentSystemITSystem.IncidentStatus, new { @Value = incidentSystemITSystem.IncidentStatus })
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->
                </div>

                <div class="tab-pane fade" id="Checklists">
                    <div class="box box-primary">
                        <div class="box-body">
                            <div class="col-lg-3">
                                <fieldset class="scheduler-border">
                                    <legend class="scheduler-border">Legend</legend>

                                    <div class="row">
                                        <div class="col-lg-2"><div class="bootstrap-checkbox"></div></div>
                                        <div class="col-lg-10">Pending</div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-2"><div class="bootstrap-checkbox"><i class="fa fa-minus"></i></div></div>
                                        <div class="col-lg-10">In Progress</div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-2"><div class="bootstrap-checkbox"><i class="fa fa-check"></i></div></div>
                                        <div class="col-lg-10">Completed</div>
                                    </div>
                                </fieldset>
                            </div>
                            <div class="col-lg-8">
                                <ul class="nav nav-pills nav-justified">
                                    @{
                                int countChecklist = 1;
                                foreach (CCCP.Business.Model.ChecklistModel checklist in Model.Checklists)
                                {
                                    <li @(countChecklist == 1 ? "class=active" : "")><a href="#list@(countChecklist)" data-toggle="tab">@(checklist.Entity.Department)</a></li>
                                    countChecklist++;
                                }
                                    }
                                </ul>
                                <div id="TabList" class="tab-content">
                                    @{
                                countChecklist = 1;
                                foreach (CCCP.Business.Model.ChecklistModel checklist in Model.Checklists)
                                {
                                    int countChecklistAction = 1;
                                    <div class="tab-pane fade @(countChecklist == 1 ? "active in" : "")" id="list@(countChecklist)">
                                        <table class="table table-striped table-bordered" cellspacing="0" width="100%">
                                            <thead>
                                            <th></th>
                                            <th>Action</th>
                                            <th>Last Updated By</th>
                                            <th>Last Updated Datetime</th>
                                            </thead>
                                            <tbody>
                                                @foreach (CCCP.Business.Model.ChecklistActionModel action in checklist.ChecklistActions)
                                                {
                                                    <tr>
                                                        <td><input type="checkbox" value="@Convert.ToInt32(action.ActionStatus)" data-checklist="@(countChecklist-1)" data-checklistaction="@(countChecklistAction-1)"></td>
                                                        <td><span @(@action.IsCompulsory ? "class=mandatory-field" : "")></span>@action.Entity.Action</td>
                                                        <td>@action.Entity.LastUpdatedBy</td>
                                                        <td>@(action.Entity.LastUpdatedDateTime == null ? "" : action.Entity.LastUpdatedDateTime.Value.ToString("yyyy-MM-dd tthh:mm:ss"))</td>
                                                    </tr>
                                                    countChecklistAction++;
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                                countChecklist++;
                                }
                                    }
                                </div>
                            </div>
                            <div class="col-lg-1"></div>
                        </div>
                    </div>
                </div>

                <div class="tab-pane fade" id="IncidentEnquiry">
                    <div class="box box-primary">
                        <div class="box-body">
                            <div class="col-lg-2"></div>
                            <div class="col-lg-8">
                                <div id="chat" style="height: 400px;overflow-y: scroll;">
                                    <div class="bubble you">
                                        <label>Peter</label><br>
                                        What happened?<br>
                                        <h6 align="right">11:46</h6>
                                    </div>
                                    <div class="bubble me">
                                        Someone got cut.<br>
                                        <h6 align="right">11:52</h6>
                                    </div>
                                    <div class="bubble you">
                                        <label>John</label><br>
                                        Is it serious?<br>
                                        <h6 align="right">11:55</h6>
                                    </div>
                                </div>
                                <div id="SendMessage">
                                    <textarea rows="4" cols="150"></textarea>
                                </div>
                            </div>
                            <div class="col-lg-2"></div>
                        </div>
                    </div>
                </div>

                <div class="tab-pane fade" id="LinkedIncident">
                    <div class="box box-primary">
                        <div class="box-body">
                            <div class="col-lg-2"></div>
                            <div class="col-lg-8">
                                <div style="height: 400px">
                                </div>
                            </div>
                            <div class="col-lg-2"></div>
                        </div>
                    </div>
                </div>

                <div class="tab-pane fade" id="LinkedGeneralEnquiry">
                    <div class="box box-primary">
                        <div class="box-body">
                            <div class="col-lg-2"></div>
                            <div class="col-lg-8">
                                <div style="height: 400px">
                                </div>
                            </div>
                            <div class="col-lg-2"></div>
                        </div>
                    </div>
                </div>

            </div>

            <div>
                <div class="form-group">
                    <button class="btn btn-primary" type="submit" id="btnUpdate">@Resources.global.Func_Update</button>
                    <button class="btn btn-primary" type="button" onclick="window.location = '@Url.Action("Details", "IncidentSystemITSystem", new { id = incidentSystemITSystem.IncidentSystemITSystemId })';">@Resources.global.Func_Cancel</button>
                </div>
            </div>
            <br />
}
            <div class="panel-group" id="accordion">
                <div class="panel panel-default">
                    <a data-toggle="collapse" data-parent="#accordion" href="#History">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                @Resources.global.Label_History <i id="HistoryIcon" class="fa fa-angle-left"></i>
                            </h4>
                        </div>
                    </a>
                    <div id="History" class="panel-collapse collapse">
                        <div class="panel-body multiline">
                            @Html.Raw(incidentSystemITSystem.History)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section><!-- /.content -->