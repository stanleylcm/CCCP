@model CCCP.Business.Model.IncidentEnvironmentLeakageModel

@using CCCP.Common
@{
    ViewBag.Title = Resources.global.Menu_IncidentEnvironmentLeakage;
    CCCP.ViewModel.IncidentEnvironmentLeakage incidentEnvironmentLeakage = Model.Entity;
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
	    $(function() {
		    $('#accordion').on('show.bs.collapse', function () {
			    $('#HistoryIcon').removeClass("fa-angle-left");
			    $('#HistoryIcon').addClass("fa-angle-down");
		    });
		    $('#accordion').on('hide.bs.collapse', function () {
			    $('#HistoryIcon').removeClass("fa-angle-down");
			    $('#HistoryIcon').addClass("fa-angle-left");
		    });

		    $('#LinkedIncidentTable').DataTable();

		    $('#Checklists input[type="checkbox"]').each(function () {
			    value = $(this).val();
			    $(this).checkbox().chbxChecked(value == '2' ? true : (value == '0' ? false : null));
		    });

		    $('.bootstrap-checkbox').on('click', function(evnet){

		        $.ajax({
		            url: "/IncidentEnvironmentLeakage/ToggleActionStatus",
		            type: "POST",
		            data: JSON.stringify({ 'checklist': $(this).data('checklist'), 'checklistAction': $(this).data('checklistaction') }),
		            dataType: "html",
		            contentType: "application/json; charset=utf-8",
		            success: function (data) {
		                return true;
		            },
		            error: function () {
		                alert("An error has occured!!!");
		            }
		        });
		    });
	    });

	    $("#incidentEnvironmentLeakage_IsDrillMode").on("click", function () {
	        $(this).val(this.checked);
	    });

	    $("#incidentEnvironmentLeakage_TypeOfLeakage").change(function () {
	        if ($(this).val() == "@IncidentEnvironmentLeakageTypeOfLeakage.Others_9please_specify0.ToEnumString()") {
	            $('#TypeOfLeakageOthers').show();
	        } else {
	            $('#TypeOfLeakageOthers').hide();
	        }
	    });

        $(document).ready(function () {
            if ($('#incidentEnvironmentLeakage_TypeOfLeakage').val() == "@IncidentEnvironmentLeakageTypeOfLeakage.Others_9please_specify0.ToEnumString()") {
                $('#TypeOfLeakageOthers').show();
            } else {
                $('#TypeOfLeakageOthers').hide();
            }

            $("#incidentEnvironmentLeakage_IsDrillMode").val($("#incidentEnvironmentLeakage_IsDrillMode").checked);
        });

        $('#btnUpdate').on('click', function (event) {
            var inputValid = true;
            var errMsg = '';

            if ($('#incidentEnvironmentLeakage_LevelOfSeverity').val() == '') {
                inputValid = false;
                errMsg = errMsg + 'Level Of Severity cannot be empty<br />';
            }

            if ($('#incidentEnvironmentLeakage_IncidentBackground').val() == '') {
                inputValid = false;
                errMsg = errMsg + 'Incident Background cannot be empty<br />';
            }

            if (inputValid == false) {
                $('#CCCPModal').find('.modal-body').html(errMsg);
                $('#CCCPModal').find('.modal-title').html('Validation Summary');
                $('#CCCPModal').modal('toggle');

                event.preventDefault();
            }

            if ($("#incidentEnvironmentLeakage_TypeOfLeakage").val() != "@IncidentEnvironmentLeakageTypeOfLeakage.Others_9please_specify0.ToEnumString()") {
                $('#incidentEnvironmentLeakage_TypeOfLeakageOthers').val("");
            }

            return inputValid;
        });
    </script>
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        <i class="fa fa-clipboard"></i> <a href="@Url.Action("Index", "IncidentEnvironmentLeakage")">@Resources.global.Menu_IncidentManagement - @Resources.global.Func_Edit @Resources.global.Menu_IncidentEnvironmentLeakage</a>
    </h1>
</section>

<!-- Main content -->
<section class="content">
    <!-- Small boxes (Stat box) -->
    <div class="row">
        <div class="col-lg-12">
            <div class="row">
                <div class="col-lg-3 pull-left">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentEnvironmentLeakage.IncidentNo)</span>
                    <span class="pull-right">@Html.DisplayFor(model => incidentEnvironmentLeakage.IncidentNo)</span>
                </div>
                <div class="col-lg-3 pull-right">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentEnvironmentLeakage.IncidentStatus)</span>
                    <span class="pull-right">@Html.DisplayFor(model => incidentEnvironmentLeakage.IncidentStatus)</span>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-3 pull-left">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentEnvironmentLeakage.CrisisId)</span>
                    <a href="#"><span class="pull-right">@Html.DisplayFor(model => incidentEnvironmentLeakage.CrisisId)</span></a>
                </div>
                <div class="col-lg-3 pull-right">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentEnvironmentLeakage.CreatedDateTime)</span>
                    <span class="pull-right">@Html.DisplayFor(model => incidentEnvironmentLeakage.CreatedDateTime)</span>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-3 pull-right">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentEnvironmentLeakage.LastUpdatedDateTime)</span>
                    <span class="pull-right">@Html.DisplayFor(model => incidentEnvironmentLeakage.LastUpdatedDateTime)</span>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <!-- content -->
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => incidentEnvironmentLeakage.IncidentEnvironmentLeakageId)
            <ul class="nav nav-pills">
                <li class="active"><a href="#IncidentDetails" data-toggle="tab">Incident Details</a></li>
                <li><a href="#Checklists" data-toggle="tab">Checklists</a></li>
                <li><a href="#IncidentEnquiry" data-toggle="tab">Chatroom</a></li>
                <li><a href="#LinkedIncident" data-toggle="tab">Linked Incidents</a></li>
                <li><a href="#LinkedGeneralEnquiry" data-toggle="tab">Linked General Enquiry</a></li>
                <li><a href="#Notification" data-toggle="tab">Notification</a></li>
            </ul>

            <div id="myTabContent" class="tab-content">

                <div class="tab-pane fade active in" id="IncidentDetails">
                    <div class="box box-primary">
                        <div class="box-body">
						
							<div class="panel-group">
								<div class="panel panel-default">
									<div class="panel panel-body">
										<div class="row">
											<div class="col-lg-1"></div>
											<div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentEnvironmentLeakage.LevelOfSeverity)</label></div>
											<div class="col-lg-4">
												<select id="incidentEnvironmentLeakage_LevelOfSeverity" name="incidentEnvironmentLeakage.LevelOfSeverity" class="form-control thin-control">
													@foreach (IncidentLevel one in Enum.GetValues(typeof(IncidentLevel)))
													{
														if (one != IncidentLevel.None)
														{
															<option value="@(Convert.ToInt32(one))" @( (Convert.ToInt32(one)).ToString() == incidentEnvironmentLeakage.LevelOfSeverity ? "selected" : "")>@one.ToEnumString()</option>
														}
													}
												</select>
												@Html.ValidationMessageFor(model => incidentEnvironmentLeakage.LevelOfSeverity, "", new { @class = "text-danger" })
											</div>
										</div>

										@*<div class="row">
											<div class="col-lg-1"></div>
											<div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentEnvironmentLeakage.IncidentStatus)</label></div>
											<div class="col-lg-4">
												<select id="incidentEnvironmentLeakage_IncidentStatus" name="incidentEnvironmentLeakage.IncidentStatus" class="form-control thin-control">
													<option value=""></option>
													@foreach (IncidentStatus one in Enum.GetValues(typeof(IncidentStatus)))
													{
														<option value="@one.ToEnumString()" @( one.ToEnumString() == incidentEnvironmentLeakage.IncidentStatus ? "selected" : "")>@one.ToEnumString()</option>
													}
												</select>
												@Html.ValidationMessageFor(model => incidentEnvironmentLeakage.IncidentStatus, "", new { @class = "text-danger" })
											</div>
										</div>*@

										<div class="row">
											<div class="col-lg-1"></div>
											<div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentEnvironmentLeakage.IncidentBackground)</label></div>
											<div class="col-lg-4">
                                                @Html.EditorFor(model => incidentEnvironmentLeakage.IncidentBackground, new { htmlAttributes = new { @class = "form-control", @style = "height:150px; width:400px" } })
												@Html.ValidationMessageFor(model => incidentEnvironmentLeakage.IncidentBackground, "", new { @class = "text-danger" })
											</div>
										</div>

										<div class="row">
											<div class="col-lg-1"></div>
											<div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentEnvironmentLeakage.IsDrillMode)</label></div>
											<div class="col-lg-4">
												<div class="checkbox">
													<input id="incidentEnvironmentLeakage_IsDrillMode" name="incidentEnvironmentLeakage.IsDrillMode" type="checkbox" value="" @(incidentEnvironmentLeakage.IsDrillMode != null && incidentEnvironmentLeakage.IsDrillMode.Value ? "checked" : "") style="top:-10px; left: 20px" />
													@Html.ValidationMessageFor(model => incidentEnvironmentLeakage.IsDrillMode, "", new { @class = "text-danger" })
												</div>
											</div>
										</div>
									</div>
								</div>

								<div class="panel panel-primary">
									<div class="panel panel-heading"><label>@Resources.global.Label_Details</label></div>
									<div class="panel panel-body">

                                        <div class="row">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentEnvironmentLeakage.Location)</label></div>
                                            <div class="col-lg-6">
                                                @Html.EditorFor(model => incidentEnvironmentLeakage.Location, new { htmlAttributes = new { @class = "form-control thin-control" } })
                                                @Html.ValidationMessageFor(model => incidentEnvironmentLeakage.Location, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentEnvironmentLeakage.PossibleCause)</label></div>
                                            <div class="col-lg-6">
                                                @Html.EditorFor(model => incidentEnvironmentLeakage.PossibleCause, new { htmlAttributes = new { @class = "form-control thin-control" } })
                                                @Html.ValidationMessageFor(model => incidentEnvironmentLeakage.PossibleCause, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentEnvironmentLeakage.Damage)</label></div>
                                            <div class="col-lg-6">
                                                @Html.EditorFor(model => incidentEnvironmentLeakage.Damage, new { htmlAttributes = new { @class = "form-control thin-control" } })
                                                @Html.ValidationMessageFor(model => incidentEnvironmentLeakage.Damage, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentEnvironmentLeakage.SourceOfInformation)</label></div>
                                            <div class="col-lg-6">
                                                <select id="incidentEnvironmentLeakage_SourceOfInformation" name="incidentEnvironmentLeakage.SourceOfInformation" class="form-control thin-control">
                                                    <option value=""></option>
                                                    @foreach (string one in Model.Options_SourceOfInformation)
                                                    {
                                                        <option value="@one" @(incidentEnvironmentLeakage.SourceOfInformation == one ? "selected" : "")>@one</option>
                                                    }
                                                </select>
                                                @Html.ValidationMessageFor(model => incidentEnvironmentLeakage.SourceOfInformation, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentEnvironmentLeakage.TypeOfLeakage)</label></div>
                                            <div class="col-lg-6">
                                                <select id="incidentEnvironmentLeakage_TypeOfLeakage" name="incidentEnvironmentLeakage.TypeOfLeakage" class="form-control thin-control">
                                                    <option value=""></option>
                                                    @foreach (string one in Model.Options_TypeOfLeakage)
                                                    {
                                                        <option value="@one" @(incidentEnvironmentLeakage.TypeOfLeakage.IsContains(one) ? "selected" : "")>@one</option>
                                                    }
                                                </select>
                                                @Html.ValidationMessageFor(model => incidentEnvironmentLeakage.TypeOfLeakage, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row" id="TypeOfLeakageOthers">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"></div>
                                            <div class="col-lg-6">
                                                @Html.EditorFor(model => incidentEnvironmentLeakage.TypeOfLeakageOthers, new { htmlAttributes = new { @class = "form-control", @style = "height:150px" } })
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentEnvironmentLeakage.AffectedArea)</label></div>
                                            <div class="col-lg-6">
                                                <select id="incidentEnvironmentLeakage_AffectedArea" name="incidentEnvironmentLeakage.AffectedArea" class="form-control thin-control">
                                                    <option value=""></option>
                                                    @foreach (string one in Model.Options_AffectedArea)
                                                    {
                                                        <option value="@one" @(incidentEnvironmentLeakage.AffectedArea == one ? "selected" : "")>@one</option>
                                                    }
                                                </select>
                                                @Html.ValidationMessageFor(model => incidentEnvironmentLeakage.AffectedArea, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
									</div>
								</div>
							</div>

                            @Html.HiddenFor(model => incidentEnvironmentLeakage.IncidentEnvironmentLeakageId, new { @Value = incidentEnvironmentLeakage.IncidentEnvironmentLeakageId })
                            @Html.HiddenFor(model => incidentEnvironmentLeakage.ChecklistBatchId, new { @Value = incidentEnvironmentLeakage.ChecklistBatchId })
                            @Html.HiddenFor(model => incidentEnvironmentLeakage.ChatRoomId, new { @Value = incidentEnvironmentLeakage.ChatRoomId })
                            @Html.HiddenFor(model => incidentEnvironmentLeakage.GeneralEnquiryId, new { @Value = incidentEnvironmentLeakage.GeneralEnquiryId })
                            @Html.HiddenFor(model => incidentEnvironmentLeakage.CrisisId, new { @Value = incidentEnvironmentLeakage.CrisisId })
                            @Html.HiddenFor(model => incidentEnvironmentLeakage.IssueById, new { @Value = incidentEnvironmentLeakage.IssueById })
                            @Html.HiddenFor(model => incidentEnvironmentLeakage.IssueDateTime, new { @Value = incidentEnvironmentLeakage.IssueDateTime == null ? "" : incidentEnvironmentLeakage.IssueDateTime.Value.ToString("yyyy-MM-dd tthh:mm:ss") })
                            @Html.HiddenFor(model => incidentEnvironmentLeakage.CloseById, new { @Value = incidentEnvironmentLeakage.CloseById })
                            @Html.HiddenFor(model => incidentEnvironmentLeakage.CloseDateTime, new { @Value = incidentEnvironmentLeakage.CloseDateTime == null ? "" : incidentEnvironmentLeakage.CloseDateTime.Value.ToString("yyyy-MM-dd tthh:mm:ss") })
                            @Html.HiddenFor(model => incidentEnvironmentLeakage.CreatedBy, new { @Value = incidentEnvironmentLeakage.CreatedBy })
                            @Html.HiddenFor(model => incidentEnvironmentLeakage.CreatedDateTime, new { @Value = incidentEnvironmentLeakage.CreatedDateTime == null ? "" : incidentEnvironmentLeakage.CreatedDateTime.Value.ToString("yyyy-MM-dd tthh:mm:ss") })
                            @Html.HiddenFor(model => incidentEnvironmentLeakage.LastUpdatedBy, new { @Value = incidentEnvironmentLeakage.LastUpdatedBy })
                            @Html.HiddenFor(model => incidentEnvironmentLeakage.LastUpdatedDateTime, new { @Value = incidentEnvironmentLeakage.LastUpdatedDateTime == null ? "" : incidentEnvironmentLeakage.LastUpdatedDateTime.Value.ToString("yyyy-MM-dd tthh:mm:ss") })
                            @Html.HiddenFor(model => incidentEnvironmentLeakage.History, new { @Value = incidentEnvironmentLeakage.History })
                            @Html.HiddenFor(model => incidentEnvironmentLeakage.IncidentNo, new { @Value = incidentEnvironmentLeakage.IncidentNo })
                            @Html.HiddenFor(model => incidentEnvironmentLeakage.IncidentStatus, new { @Value = incidentEnvironmentLeakage.IncidentStatus })
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->
                </div>

                <div class="tab-pane fade" id="Checklists">
                    <div class="box box-primary">
                        <div class="box-body">
                            <div class="col-lg-3">
                                <fieldset class="scheduler-border">
                                    <legend class="scheduler-border">Legend</legend>

                                    <div class="row">
                                        <div class="col-lg-2"><div class="bootstrap-checkbox"></div></div>
                                        <div class="col-lg-10">Pending</div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-2"><div class="bootstrap-checkbox"><i class="fa fa-minus"></i></div></div>
                                        <div class="col-lg-10">In Progress</div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-2"><div class="bootstrap-checkbox"><i class="fa fa-check"></i></div></div>
                                        <div class="col-lg-10">Completed</div>
                                    </div>
                                </fieldset>
                            </div>
                            <div class="col-lg-8">
                                <ul class="nav nav-pills">
                                    @{
                                int countChecklist = 1;
                                foreach (CCCP.Business.Model.ChecklistModel checklist in Model.Checklists)
                                {
                                    <li @(countChecklist == 1 ? "class=active" : "")><a href="#list@(countChecklist)" data-toggle="tab">@(checklist.Entity.Department)</a></li>
                                    countChecklist++;
                                }
                                    }
                                </ul>
                                <div id="TabList" class="tab-content">
                                    @{
                                countChecklist = 1;
                                foreach (CCCP.Business.Model.ChecklistModel checklist in Model.Checklists)
                                {
                                    int countChecklistAction = 1;
                                    <div class="tab-pane fade @(countChecklist == 1 ? "active in" : "")" id="list@(countChecklist)">
                                        <table class="table table-striped table-bordered" cellspacing="0" width="100%">
                                            <thead>
                                            <th></th>
                                            <th>Action</th>
                                            <th>Last Updated By</th>
                                            <th>Last Updated Datetime</th>
                                            </thead>
                                            <tbody>
                                                @foreach (CCCP.Business.Model.ChecklistActionModel action in checklist.ChecklistActions)
                                                {
                                                    <tr>
                                                        <td><input type="checkbox" value="@Convert.ToInt32(action.ActionStatus)" data-checklist="@(countChecklist-1)" data-checklistaction="@(countChecklistAction-1)"></td>
                                                        <td><span @(@action.IsCompulsory ? "class=mandatory-field" : "")></span>@action.Entity.Action</td>
                                                        <td>@action.Entity.LastUpdatedBy</td>
                                                        <td>@(action.Entity.LastUpdatedDateTime == null ? "" : action.Entity.LastUpdatedDateTime.Value.ToString("yyyy-MM-dd tthh:mm:ss"))</td>
                                                    </tr>
                                                    countChecklistAction++;
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                                countChecklist++;
                                }
                                    }
                                </div>
                            </div>
                            <div class="col-lg-1"></div>
                        </div>
                    </div>
                </div>

                <div class="tab-pane fade" id="IncidentEnquiry">
                    <div class="box box-primary">
                        <div class="box-body">
                            <div class="col-lg-2"></div>
                            <div class="col-lg-8">
                                <div id="chat" style="height: 400px;overflow-y: scroll;">
                                    <div class="bubble you">
                                        <label>Peter</label><br>
                                        What happened?<br>
                                        <h6 align="right">11:46</h6>
                                    </div>
                                    <div class="bubble me">
                                        Someone got cut.<br>
                                        <h6 align="right">11:52</h6>
                                    </div>
                                    <div class="bubble you">
                                        <label>John</label><br>
                                        Is it serious?<br>
                                        <h6 align="right">11:55</h6>
                                    </div>
                                </div>
                                <div id="SendMessage">
                                    <textarea rows="4" cols="150"></textarea>
                                </div>
                            </div>
                            <div class="col-lg-2"></div>
                        </div>
                    </div>
                </div>

                <div class="tab-pane fade" id="LinkedIncident">
                    <div class="box box-primary">
                        <div class="box-body">
                            <div class="col-lg-2"></div>
                            <div class="col-lg-8">
                                <div style="height: 400px">
                                </div>
                            </div>
                            <div class="col-lg-2"></div>
                        </div>
                    </div>
                </div>

                <div class="tab-pane fade" id="LinkedGeneralEnquiry">
                    <div class="box box-primary">
                        <div class="box-body">
                            <div class="col-lg-1"></div>
                            <div class="col-lg-10">
                                <table id="LinkedIncidentTable" class="table table-striped table-bordered" cellspacing="0" width="100%">
                                    <thead>
                                        <tr>
                                            <th>@Html.DisplayNameFor(model => model.Entity.IncidentNo)</th>
                                            <th>Incident Type</th>
                                            <th>@Html.DisplayNameFor(model => model.Entity.LevelOfSeverity)</th>
                                            <th>@Html.DisplayNameFor(model => model.Entity.IncidentStatus)</th>
                                            <th>@Html.DisplayNameFor(model => model.Entity.IncidentBackground)</th>
                                            <th>@Html.DisplayNameFor(model => model.Entity.CreatedBy)</th>
                                            <th>@Html.DisplayNameFor(model => model.Entity.IssueDateTime)</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.LinkedIncidentEntities)
                                        {
                                            string sLevelOfSeverity1 = "";
                                            if (item.LevelOfSeverity != null)
                                            {
                                                int level = Convert.ToInt32(item.LevelOfSeverity);
                                                IncidentLevel iLevel = (IncidentLevel)level;
                                                sLevelOfSeverity1 = iLevel.ToEnumString();
                                            }
                                            <tr>
                                                <td>@Html.DisplayFor(model => item.IncidentNo)</td>
                                                <td>@Html.DisplayFor(model => item.IncidentType)</td>
                                                <td>@Html.DisplayFor(model => sLevelOfSeverity1)</td>
                                                <td>@Html.DisplayFor(model => item.IncidentStatus)</td>
                                                <td>@Html.Raw(item.IncidentBackground != null ? item.IncidentBackground.Replace(System.Environment.NewLine, "<br/>") : "")</td>
                                                <td>@Html.DisplayFor(model => item.CreatedBy)</td>
                                                <td>@Html.DisplayFor(model => item.IssueDateTime)</td>
                                                <td>
                                                    <div class="tools">
                                                        <a href="@Url.Action("Details", item.Controller, new { id = item.IncidentId })" title="@Resources.global.Func_LinkIncident"><i class="fa fa-sliders"></i></a>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            <div class="col-lg-1"></div>
                        </div>
                    </div>
                </div>

                <div class="tab-pane fade" id="Notification">
                    <div class="box box-primary">
                        <div class="box-body">
                            <div class="col-lg-1"></div>
                            <div class="col-lg-10">
                                <table id="NotificationTable" class="table table-striped table-bordered" cellspacing="0" width="100%">
                                    <thead>
                                        <tr>
                                            <th>@Html.DisplayNameFor(model => model.NotificationEntities.FirstOrDefault().CreatedDateTime)</th>
                                            <th>@Html.DisplayNameFor(model => model.NotificationEntities.FirstOrDefault().Message)</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.NotificationEntities)
                                        {
                                            <tr>
                                                <td>@Html.DisplayFor(model => item.CreatedDateTime)</td>
                                                <td>@Html.DisplayFor(model => item.Message)</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            <div class="col-lg-1"></div>
                        </div>
                    </div>
                </div>

            </div>

            <div>
                <div class="form-group">
                    <button class="btn btn-primary" type="submit" id="btnUpdate">@Resources.global.Func_Update</button>
                    <button class="btn btn-primary" type="button" onclick="window.location = '@Url.Action("Details", "IncidentEnvironmentLeakage", new { id = incidentEnvironmentLeakage.IncidentEnvironmentLeakageId })';">@Resources.global.Func_Cancel</button>
                </div>
            </div>
            <br />
}
            <div class="panel-group" id="accordion">
                <div class="panel panel-default">
                    <a data-toggle="collapse" data-parent="#accordion" href="#History">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                @Resources.global.Label_History <i id="HistoryIcon" class="fa fa-angle-left"></i>
                            </h4>
                        </div>
                    </a>
                    <div id="History" class="panel-collapse collapse">
                        <div class="panel-body multiline">
                            @Html.Raw(incidentEnvironmentLeakage.History)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section><!-- /.content -->