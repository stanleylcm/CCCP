@model CCCP.Business.Model.IncidentQualityCorporateImageModel

@using CCCP.Common
@{
    ViewBag.Title = Resources.global.Menu_IncidentQualityCorporateImage;
    CCCP.ViewModel.IncidentQualityCorporateImage incidentQualityCorporateImage = Model.Entity;
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
	    $(function() {
		    $('#accordion').on('show.bs.collapse', function () {
			    $('#HistoryIcon').removeClass("fa-angle-left");
			    $('#HistoryIcon').addClass("fa-angle-down");
		    });
		    $('#accordion').on('hide.bs.collapse', function () {
			    $('#HistoryIcon').removeClass("fa-angle-down");
			    $('#HistoryIcon').addClass("fa-angle-left");
		    });

		    $('#Checklists input[type="checkbox"]').each(function () {
			    value = $(this).val();
			    $(this).checkbox().chbxChecked(value == '2' ? true : (value == '0' ? false : null));
		    });

		    $('.bootstrap-checkbox').on('click', function(evnet){

		        $.ajax({
		            url: "/IncidentQualityCorporateImage/ToggleActionStatus",
		            type: "POST",
		            data: JSON.stringify({ 'checklist': $(this).data('checklist'), 'checklistAction': $(this).data('checklistaction') }),
		            dataType: "html",
		            contentType: "application/json; charset=utf-8",
		            success: function (data) {
		                return true;
		            },
		            error: function () {
		                alert("An error has occured!!!");
		            }
		        });
		    });
	    });

	    $("input[type=checkbox][id^=PossibleCause]").on("click", function () {
	        var sList = "";
	        var i = 0;
	        $("input[type=checkbox][id^=PossibleCause]").each(function () {
	            if (this.checked) {
	                if (i == 0) {
	                    sList = $(this).val();
	                } else {
	                    sList = sList + ", " + $(this).val();
	                }
	                if ($(this).val() == "@(IncidentQualityCorporateImagePossibleCause.Others.ToEnumString())") {
	                    sList = sList + " (" + $("#PossibleCause@(IncidentQualityCorporateImagePossibleCause.Others)More").val() + ")";
	                }
	                i++;
	            }
	        });
	        $("#incidentQualityCorporateImage_PossibleCause").val(sList);
	    });

	    $("#PossibleCause@(IncidentQualityCorporateImagePossibleCause.Others)More").change(function () {
	        var sList = "";
	        var i = 0;
	        $("input[type=checkbox][id^=PossibleCause]").each(function () {
	            if (this.checked) {
	                if (i == 0) {
	                    sList = $(this).val();
	                } else {
	                    sList = sList + ", " + $(this).val();
	                }
	                if ($(this).val() == "@(IncidentQualityCorporateImagePossibleCause.Others.ToEnumString())") {
	                    sList = sList + " (" + $("#PossibleCause@(IncidentQualityCorporateImagePossibleCause.Others)More").val() + ")";
	                }
	                i++;
	            }
	        });
	        $("#incidentQualityCorporateImage_PossibleCause").val(sList);
	    });

	    $("input[type=checkbox][id^=Impact]").on("click", function () {
	        var sList = "";
	        var i = 0;
	        $("input[type=checkbox][id^=Impact]").each(function () {
	            if (this.checked) {
	                if (i == 0) {
	                    sList = $(this).val();
	                } else {
	                    sList = sList + ", " + $(this).val();
	                }
	                if ($(this).val() == "@(IncidentQualityCorporateImageImpact.Others.ToEnumString())") {
	                    sList = sList + " (" + $("#Impact@(IncidentQualityCorporateImageImpact.Others)More").val() + ")";
	                }
	                i++;
	            }
	        });
	        $("#incidentQualityCorporateImage_Impact").val(sList);
	    });

	    $("#Impact@(IncidentQualityCorporateImageImpact.Others)More").change(function () {
	        var sList = "";
	        var i = 0;
	        $("input[type=checkbox][id^=Impact]").each(function () {
	            if (this.checked) {
	                if (i == 0) {
	                    sList = $(this).val();
	                } else {
	                    sList = sList + ", " + $(this).val();
	                }
	                if ($(this).val() == "@(IncidentQualityCorporateImageImpact.Others.ToEnumString())") {
	                    sList = sList + " (" + $("#Impact@(IncidentQualityCorporateImageImpact.Others)More").val() + ")";
	                }
	                i++;
	            }
	        });
	        $("#incidentQualityCorporateImage_Impact").val(sList);
	    });

	    $("#incidentQualityCorporateImage_IsDrillMode").on("click", function () {
	        $(this).val(this.checked);
	    });

        $('#btnUpdate').on('click', function (event) {
            var inputValid = true;
            var errMsg = '';

            if ($('#incidentQualityCorporateImage_LevelOfSeverity').val() == '') {
                inputValid = false;
                errMsg = errMsg + 'Level Of Severity is required<br />';
            }

            if ($('#incidentQualityCorporateImage_PossibleCause').val() == '') {
                inputValid = false;
                errMsg = errMsg + '\r\nPossible Cause is required<br />';
            }

            if ($('#incidentQualityCorporateImage_Impact').val() == '') {
                inputValid = false;
                errMsg = errMsg + '\r\Impact is required<br />';
            }

            if ($('#incidentQualityCorporateImage_RemedyAction').val() == '') {
                inputValid = false;
                errMsg = errMsg + '\r\nRemedy Action is required<br />';
            }

            if ($('#incidentQualityCorporateImage_StatusUpdate').val() == '') {
                inputValid = false;
                errMsg = errMsg + '\r\nStatus Update is required<br />';
            }

            if (inputValid == false) {
                $('#CCCPModal').find('.modal-body').html(errMsg);
                $('#CCCPModal').find('.modal-title').html('Update Error');
                $('#CCCPModal').modal('toggle');

                event.preventDefault();
            }

            return inputValid;
        });
    </script>
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        <i class="fa fa-clipboard"></i> <a href="@Url.Action("Index", "IncidentQualityCorporateImage")">@Resources.global.Menu_IncidentManagement - @Resources.global.Func_Edit @Resources.global.Menu_IncidentQualityCorporateImage</a>
    </h1>
</section>

<!-- Main content -->
<section class="content">
    <!-- Small boxes (Stat box) -->
    <div class="row">
        <div class="col-lg-12">
            <div class="row">
                <div class="col-lg-3 pull-left">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentQualityCorporateImage.IncidentNo)</span>
                    <span class="pull-right">@Html.DisplayFor(model => incidentQualityCorporateImage.IncidentNo)</span>
                </div>
                <div class="col-lg-3 pull-right">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentQualityCorporateImage.IncidentStatus)</span>
                    <span class="pull-right">@Html.DisplayFor(model => incidentQualityCorporateImage.IncidentStatus)</span>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-3 pull-left">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentQualityCorporateImage.GeneralEnquiryId)</span>
                    <a href="#"><span class="pull-right">@(incidentQualityCorporateImage.GeneralEnquiryId == 0 ? "" : incidentQualityCorporateImage.GeneralEnquiryId.ToString())</span></a>
                </div>
                <div class="col-lg-3 pull-right">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentQualityCorporateImage.CreatedDateTime)</span>
                    <span class="pull-right">@Html.DisplayFor(model => incidentQualityCorporateImage.CreatedDateTime)</span>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-3 pull-left">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentQualityCorporateImage.CrisisId)</span>
                    <a href="#"><span class="pull-right">@Html.DisplayFor(model => incidentQualityCorporateImage.CrisisId)</span></a>
                </div>
                <div class="col-lg-3 pull-right">
                    <span class="pull-left">@Html.DisplayNameFor(model => incidentQualityCorporateImage.LastUpdatedDateTime)</span>
                    <span class="pull-right">@Html.DisplayFor(model => incidentQualityCorporateImage.LastUpdatedDateTime)</span>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <!-- content -->
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => incidentQualityCorporateImage.IncidentQualityCorporateImageId)
            <ul class="nav nav-tabs nav-justified">
                <li class="active"><a href="#IncidentDetails" data-toggle="tab">Incident Details</a></li>
                <li><a href="#Checklists" data-toggle="tab">Checklists</a></li>
                <li><a href="#IncidentEnquiry" data-toggle="tab">Chatroom</a></li>
                <li><a href="#LinkedIncident" data-toggle="tab">Linked Incidents</a></li>
            </ul>

            <div id="myTabContent" class="tab-content">

                <div class="tab-pane fade active in" id="IncidentDetails">
                    <div class="box box-primary">
                        <div class="box-body">
                            <div class="panel-group">
                                <div class="panel panel-default">
                                    <div class="panel panel-body">
                                        <div class="row">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentQualityCorporateImage.LevelOfSeverity)</label></div>
                                            <div class="col-lg-4">
                                                <select id="incidentQualityCorporateImage_LevelOfSeverity" name="incidentQualityCorporateImage.LevelOfSeverity" class="form-control thin-control">
                                                    <option value=""></option>
                                                    @foreach (IncidentLevel one in Enum.GetValues(typeof(IncidentLevel)))
                                                    {
                                                        if (one != IncidentLevel.None)
                                                        {
                                                            <option value="@(Convert.ToInt32(one))" @( (Convert.ToInt32(one)).ToString() == incidentQualityCorporateImage.LevelOfSeverity ? "selected" : "")>@one.ToEnumString()</option>
                                                        }
                                                    }
                                                </select>
                                                @Html.ValidationMessageFor(model => incidentQualityCorporateImage.LevelOfSeverity, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentQualityCorporateImage.IncidentStatus)</label></div>
                                            <div class="col-lg-4">
                                                <select id="incidentQualityCorporateImage_IncidentStatus" name="incidentQualityCorporateImage.IncidentStatus" class="form-control thin-control">
                                                    <option value=""></option>
                                                    @foreach (IncidentStatus one in Enum.GetValues(typeof(IncidentStatus)))
                                                    {
                                                        <option value="@one.ToEnumString()" @( one.ToEnumString() == incidentQualityCorporateImage.IncidentStatus ? "selected" : "")>@one.ToEnumString()</option>
                                                    }
                                                </select>
                                                @Html.ValidationMessageFor(model => incidentQualityCorporateImage.IncidentStatus, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentQualityCorporateImage.IncidentBackground)</label></div>
                                            <div class="col-lg-4">
                                                @Html.EditorFor(model => incidentQualityCorporateImage.IncidentBackground, new { htmlAttributes = new { @class = "form-control thin-control" } })
                                                @Html.ValidationMessageFor(model => incidentQualityCorporateImage.IncidentBackground, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => incidentQualityCorporateImage.IsDrillMode)</label></div>
                                            <div class="col-lg-4">
                                                <div class="checkbox">
                                                    <input id="incidentQualityCorporateImage_IsDrillMode" name="incidentQualityCorporateImage.IsDrillMode" type="checkbox" value="" @(incidentQualityCorporateImage.IsDrillMode != null && incidentQualityCorporateImage.IsDrillMode.Value ? "checked" : "") style="top:-10px; left: 20px" />
                                                    @Html.ValidationMessageFor(model => incidentQualityCorporateImage.IsDrillMode, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="panel panel-primary">
                                    <div class="panel panel-heading"><label>@Resources.global.Label_Details</label></div>
                                    <div class="panel panel-body">

                                        <div class="row">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentQualityCorporateImage.PossibleCause)</label></div>
                                            <div class="col-lg-6">
                                                @{
                                                    int countPossibleCause = 0;
                                                    foreach (string one in Model.Options_PossibleCause)
                                                    {
                                                        <input id="PossibleCause@(countPossibleCause.ToString())" type="checkbox" value="@one" @(incidentQualityCorporateImage.PossibleCause.IsContains(one) ? "checked" : "") /><label for="PossibleCause@(countPossibleCause.ToString())"> @one</label>
                                                        if (one != IncidentQualityCorporateImagePossibleCause.Others.ToEnumString())
                                                        {
                                                            <br />
                                                        }
                                                        else
                                                        {
                                                            string sPossibleCauseMore = "";
                                                            if (incidentQualityCorporateImage.PossibleCause != null && incidentQualityCorporateImage.PossibleCause.IsContains(one))
                                                            {
                                                                sPossibleCauseMore = incidentQualityCorporateImage.PossibleCause.Substring(incidentQualityCorporateImage.PossibleCause.IndexOf('(') + 1, incidentQualityCorporateImage.PossibleCause.IndexOf(')') - incidentQualityCorporateImage.PossibleCause.IndexOf('(') - 1);
                                                            }
                                                            <input id="PossibleCause@(one)More" name="PossibleCause@(one)More" type="text" value="@sPossibleCauseMore" class="form-control thin-control text-box pull-right" style="width:70%" />
                                                        }
                                                        countPossibleCause++;
                                                    }
                                                }
                                                <input type="hidden" id="incidentQualityCorporateImage_PossibleCause" name="incidentQualityCorporateImage.PossibleCause" value="" />
                                                @Html.ValidationMessageFor(model => incidentQualityCorporateImage.PossibleCause, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentQualityCorporateImage.Impact)</label></div>
                                            <div class="col-lg-6">
                                                                                                @{
                                                    int countImpact = 0;
                                                    foreach (string one in Model.Options_Impact)
                                                    {
                                                        <input id="Impact@(countImpact.ToString())" type="checkbox" value="@one" @(incidentQualityCorporateImage.Impact.IsContains(one) ? "checked" : "") /><label for="Impact@(countImpact.ToString())"> @one</label>
                                                        if (one != IncidentQualityCorporateImageImpact.Others.ToEnumString())
                                                        {
                                                            <br />
                                                        }
                                                        else
                                                        {
                                                            string sImpactMore = "";
                                                            if (incidentQualityCorporateImage.Impact != null && incidentQualityCorporateImage.Impact.IsContains(one))
                                                            {
                                                                sImpactMore = incidentQualityCorporateImage.Impact.Substring(incidentQualityCorporateImage.Impact.IndexOf('(') + 1, incidentQualityCorporateImage.Impact.IndexOf(')') - incidentQualityCorporateImage.Impact.IndexOf('(') - 1);
                                                            }
                                                            <input id="Impact@(one)More" name="Impact@(one)More" type="text" value="@sImpactMore" class="form-control thin-control text-box pull-right" style="width:70%" />
                                                        }
                                                        countImpact++;
                                                    }
                                                }
                                                <input type="hidden" id="incidentQualityCorporateImage_Impact" name="incidentQualityCorporateImage.Impact" value="" />
                                                @Html.ValidationMessageFor(model => incidentQualityCorporateImage.Impact, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentQualityCorporateImage.RemedyAction)</label></div>
                                            <div class="col-lg-6">
                                                @Html.EditorFor(model => incidentQualityCorporateImage.RemedyAction, new { htmlAttributes = new { @class = "form-control thin-control" } })
                                                @Html.ValidationMessageFor(model => incidentQualityCorporateImage.RemedyAction, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-lg-1"></div>
                                            <div class="col-lg-3 text-right"><label class="mandatory-field">@Html.DisplayNameFor(model => incidentQualityCorporateImage.StatusUpdate)</label></div>
                                            <div class="col-lg-6">
                                                <select id="incidentQualityCorporateImage_StatusUpdate" name="incidentQualityCorporateImage.StatusUpdate" class="form-control thin-control">
                                                    <option value=""></option>
                                                    @foreach (string one in Model.Options_StatusUpdate)
                                                    {
                                                        <option value="@one" @(incidentQualityCorporateImage.StatusUpdate == one ? "selected" : "")>@one</option>
                                                    }
                                                </select>

                                                @Html.ValidationMessageFor(model => incidentQualityCorporateImage.StatusUpdate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

            @Html.HiddenFor(model => incidentQualityCorporateImage.IncidentQualityCorporateImageId, new { @Value = incidentQualityCorporateImage.IncidentQualityCorporateImageId })
            @Html.HiddenFor(model => incidentQualityCorporateImage.ChecklistBatchId, new { @Value = incidentQualityCorporateImage.ChecklistBatchId })
            @Html.HiddenFor(model => incidentQualityCorporateImage.ChatRoomId, new { @Value = incidentQualityCorporateImage.ChatRoomId })
            @Html.HiddenFor(model => incidentQualityCorporateImage.GeneralEnquiryId, new { @Value = incidentQualityCorporateImage.GeneralEnquiryId })
            @Html.HiddenFor(model => incidentQualityCorporateImage.CrisisId, new { @Value = incidentQualityCorporateImage.CrisisId })
            @Html.HiddenFor(model => incidentQualityCorporateImage.NotificationId, new { @Value = incidentQualityCorporateImage.NotificationId })
            @Html.HiddenFor(model => incidentQualityCorporateImage.IssueById, new { @Value = incidentQualityCorporateImage.IssueById })
            @Html.HiddenFor(model => incidentQualityCorporateImage.IssueDateTime, new { @Value = incidentQualityCorporateImage.IssueDateTime == null ? "" : incidentQualityCorporateImage.IssueDateTime.Value.ToString("yyyy-MM-dd tthh:mm:ss") })
            @Html.HiddenFor(model => incidentQualityCorporateImage.CloseById, new { @Value = incidentQualityCorporateImage.CloseById })
            @Html.HiddenFor(model => incidentQualityCorporateImage.CloseDateTime, new { @Value = incidentQualityCorporateImage.CloseDateTime == null ? "" : incidentQualityCorporateImage.CloseDateTime.Value.ToString("yyyy-MM-dd tthh:mm:ss") })
            @Html.HiddenFor(model => incidentQualityCorporateImage.CreatedBy, new { @Value = incidentQualityCorporateImage.CreatedBy })
            @Html.HiddenFor(model => incidentQualityCorporateImage.CreatedDateTime, new { @Value = incidentQualityCorporateImage.CreatedDateTime == null ? "" : incidentQualityCorporateImage.CreatedDateTime.Value.ToString("yyyy-MM-dd tthh:mm:ss") })
            @Html.HiddenFor(model => incidentQualityCorporateImage.LastUpdatedBy, new { @Value = incidentQualityCorporateImage.LastUpdatedBy })
            @Html.HiddenFor(model => incidentQualityCorporateImage.LastUpdatedDateTime, new { @Value = incidentQualityCorporateImage.LastUpdatedDateTime == null ? "" : incidentQualityCorporateImage.LastUpdatedDateTime.Value.ToString("yyyy-MM-dd tthh:mm:ss") })
            @Html.HiddenFor(model => incidentQualityCorporateImage.History, new { @Value = incidentQualityCorporateImage.History })
            @Html.HiddenFor(model => incidentQualityCorporateImage.IncidentNo, new { @Value = incidentQualityCorporateImage.IncidentNo })
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->
                </div>

                <div class="tab-pane fade" id="Checklists">
                    <div class="box box-primary">
                        <div class="box-body">
                            <div class="col-lg-2">
                                <fieldset class="scheduler-border">
                                    <legend class="scheduler-border">Legend</legend>

                                    <div class="row">
                                        <div class="col-lg-2"><div class="bootstrap-checkbox"></div></div>
                                        <div class="col-lg-10">Pending</div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-2"><div class="bootstrap-checkbox"><i class="fa fa-minus"></i></div></div>
                                        <div class="col-lg-10">In Progress</div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-2"><div class="bootstrap-checkbox"><i class="fa fa-check"></i></div></div>
                                        <div class="col-lg-10">Completed</div>
                                    </div>
                                </fieldset>
                            </div>
                            <div class="col-lg-8">
                                <ul class="nav nav-pills nav-justified">
                                    @{
                                        int countChecklist = 1;
                                        foreach (CCCP.Business.Model.ChecklistModel checklist in Model.Checklists)
                                        {
                                    <li @(countChecklist == 1 ? "class=active" : "")><a href="#list@(countChecklist)" data-toggle="tab">@(checklist.Entity.Department)</a></li>
                                            countChecklist++;
                                        }
                                    }
                                </ul>
                                <div id="TabList" class="tab-content">
                                    @{
                                        countChecklist = 1;
                                        foreach (CCCP.Business.Model.ChecklistModel checklist in Model.Checklists)
                                        {
                                            int countChecklistAction = 1;
                                    <div class="tab-pane fade @(countChecklist == 1 ? "active in" : "")" id="list@(countChecklist)">
                                        <table class="table table-striped table-bordered" cellspacing="0" width="100%">
                                            <thead>
                                            <th></th>
                                            <th>Action</th>
                                            <th>Completed By</th>
                                            <th>Completed Datetime</th>
                                            </thead>
                                            <tbody>
                                                @foreach (CCCP.Business.Model.ChecklistActionModel action in checklist.ChecklistActions)
                                                {
                                                    <tr>
                                                        <td><input type="checkbox" value="@Convert.ToInt32(action.ActionStatus)" data-checklist="@(countChecklist-1)" data-checklistaction="@(countChecklistAction-1)"></td>
                                                        <td><span @(@action.IsCompulsory ? "class=mandatory-field" : "")></span>@action.Entity.Action</td>
                                                        <td>@(action.ActionStatus == CCCP.Common.CheckListActionStatus.Completed ? action.Entity.LastUpdatedBy : "")</td>
                                                        <td>@((action.ActionStatus == CCCP.Common.CheckListActionStatus.Completed ? action.Entity.LastUpdatedDateTime == null ? "" : action.Entity.LastUpdatedDateTime.Value.ToString("yyyy-MM-dd tthh:mm:ss") : ""))</td>
                                                    </tr>
                                                    countChecklistAction++;
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                                countChecklist++;
                                            }
                                        }
                                </div>
                            </div>
                            <div class="col-lg-2"></div>
                        </div>
                    </div>
                </div>

                <div class="tab-pane fade" id="IncidentEnquiry">
                    <div class="box box-primary">
                        <div class="box-body">
                            <div class="col-lg-2"></div>
                            <div class="col-lg-8">
                                <div id="chat" style="height: 400px;overflow-y: scroll;">
                                    <div class="bubble you">
                                        <label>Peter</label><br>
                                        What happened?<br>
                                        <h6 align="right">11:46</h6>
                                    </div>
                                    <div class="bubble me">
                                        Someone got cut.<br>
                                        <h6 align="right">11:52</h6>
                                    </div>
                                    <div class="bubble you">
                                        <label>John</label><br>
                                        Is it serious?<br>
                                        <h6 align="right">11:55</h6>
                                    </div>
                                </div>
                                <div id="SendMessage">
                                    <textarea rows="4" cols="150"></textarea>
                                </div>
                            </div>
                            <div class="col-lg-2"></div>
                        </div>
                    </div>
                </div>

                <div class="tab-pane fade" id="LinkedIncident">
                    <div class="box box-primary">
                        <div class="box-body">
                            <div class="col-lg-2"></div>
                            <div class="col-lg-8">
                                <div style="height: 400px">
                                </div>
                            </div>
                            <div class="col-lg-2"></div>
                        </div>
                    </div>
                </div>

            </div>

            <div>
                <div class="form-group">
                    <button class="btn btn-primary" type="submit" id="btnUpdate">@Resources.global.Func_Update</button>
                    <button class="btn btn-primary" type="button" onclick="window.location = '@Url.Action("Details", "IncidentQualityCorporateImage", new { id = incidentQualityCorporateImage.IncidentQualityCorporateImageId })';">@Resources.global.Func_Cancel</button>
                </div>
            </div>
            <br />
}
            <div class="panel-group" id="accordion">
                <div class="panel panel-default">
                    <a data-toggle="collapse" data-parent="#accordion" href="#History">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                @Resources.global.Label_History <i id="HistoryIcon" class="fa fa-angle-left"></i>
                            </h4>
                        </div>
                    </a>
                    <div id="History" class="panel-collapse collapse">
                        <div class="panel-body multiline">
                            @Html.Raw(incidentQualityCorporateImage.History)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section><!-- /.content -->