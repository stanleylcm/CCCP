@model CCCP.Business.Model.RoleModel

@using CCCP.Common
@using CCCP.Business.Service
@using CCCP.Business.Model
@using CCCP.ViewModel
@{
    ViewBag.Title = Resources.global.Menu_RoleMaintenance;
    CCCP.ViewModel.Role role = Model.Entity; // variable for binding
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        <i class="fa fa-users"></i> @Resources.global.Menu_RoleMaintenance - @Resources.global.Func_Edit
    </h1>
</section>

<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-lg-12">
            <div class="box box-primary">
                <div class="box-body">
                    @using (Html.BeginForm("Edit", "RoleMaintenance"))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="panel-group">
                            <div class="panel panel-default">
                                <div class="panel panel-body">

                                    <div class="row">
                                        <div class="col-lg-1"></div>
                                        <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => role.Code)</label></div>
                                        <div class="col-lg-4">
                                            @Html.EditorFor(model => role.Code, new { htmlAttributes = new { @class = "form-control thin-control" } })
                                            @Html.ValidationMessageFor(model => role.Code, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-1"></div>
                                        <div class="col-lg-3 text-right"><label>@Html.DisplayNameFor(model => role.Description)</label></div>
                                        <div class="col-lg-4">
                                            @Html.EditorFor(model => role.Description, new { htmlAttributes = new { @class = "form-control thin-control" } })
                                            @Html.ValidationMessageFor(model => role.Description, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        @Html.HiddenFor(model => role.RoleId, new { @Value = 0 })
                        @Html.HiddenFor(model => role.CreatedBy)
                        @Html.HiddenFor(model => role.CreatedDateTime)
                        @Html.HiddenFor(model => role.LastUpdatedBy)
                        @Html.HiddenFor(model => role.LastUpdatedDateTime)

                        <div class="panel-group">
                            <div class="panel panel-primary">
                                <div class="panel panel-heading"><label>@Resources.global.Label_Function</label></div>
                                <div class="panel panel-body">
                                    <table class="table table-striped table-bordered" cellspacing="0" width="100%">
                                        <thead>
                                        <th style="text-align:center"><input type="checkbox" id="btnBatchFunction"><label for="btnBatchFunction">Select All</label></th>
                                        <th>@Html.DisplayNameFor(model => model.FunctionEntities.FirstOrDefault().Description)</th>
                                        </thead>
                                        <tbody>
                                            @{
                        foreach (Function func in Model.FunctionEntities)
                        {
                            <tr>
                                <td align="center"><input type="checkbox" id="func@(func.FunctionId)" data-functionid="@(func.FunctionId)" @(Model.IsFunctionSelected(func.FunctionId) ? "checked" : "")></td>
                                <td>@Html.DisplayFor(model => func.Description)</td>
                            </tr>
                        }
                        if (Model.FunctionEntities.Count() == 0)
                        {
                            <tr><td class="dataTables_empty" valign="top" colspan="2">No data available in table</td></tr>
                        }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div class="panel-group">
                            <div class="panel panel-info">
                                <div class="panel panel-heading"><label>@Resources.global.Label_Department</label></div>
                                <div class="panel panel-body">
                                    <table class="table table-striped table-bordered" cellspacing="0" width="100%">
                                        <thead>
                                        <th style="text-align:center"><input type="checkbox" id="btnBatchDepartment"><label for="btnBatchDepartment">Select All</label></th>
                                        <th style="text-align:center">@Html.DisplayNameFor(model => model.DepartmentEntities.FirstOrDefault().Department1)</th>
                                        </thead>
                                        <tbody>
                                            @{
                        foreach (Department dept in Model.DepartmentEntities)
                        {
                            <tr>
                                <td align="center"><input type="checkbox" id="dept@(dept.DepartmentId)" data-departmentid="@(dept.DepartmentId)" @(Model.IsDepartmentSelected(dept.DepartmentId) ? "checked" : "")></td>
                                <td align="center">@Html.DisplayFor(model => dept.Department1)</td>
                            </tr>
                        }
                        if (Model.DepartmentEntities.Count() == 0)
                        {
                            <tr><td class="dataTables_empty" valign="top" colspan="2">No data available in table</td></tr>
                        }
                                            }
                                        </tbody>
                                    </table>

                                </div>
                            </div>
                        </div>

                        <div class="box-footer">
                            <div class="form-group">
                                <button class="btn btn-primary" type="submit" id="btnCreate">@Resources.global.Func_Save</button>
                                <button class="btn btn-primary" type="button" onclick="window.location = '@Url.Action("Index", "RoleMaintenance")';">@Resources.global.Func_Cancel</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $("input[type=checkbox][id^=dept]").on("click", function () {
            $.ajax({
                url: "@Url.Action("ToggleRoleDepartment", "RoleMaintenance")",
                type: "POST",
                data: JSON.stringify({ 'departmentId': $(this).data('departmentid') }),
                dataType: "html",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    return true;
                },
                error: function () {
                    alert("An error has occured!!!");
                }
            });
        });

        $("input[type=checkbox][id^=func]").on("click", function () {
            $.ajax({
                url: "@Url.Action("ToggleRoleFunction", "RoleMaintenance")",
                type: "POST",
                data: JSON.stringify({ 'functionId': $(this).data('functionid') }),
                dataType: "html",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    return true;
                },
                error: function () {
                    alert("An error has occured!!!");
                }
            });
        });

        $('#btnCreate').on('click', function (event) {
            var inputValid = true;
            var errMsg = '';

            if ($('#incidentEnvironmentAirEmission_IncidentBackground').val() == '') {
                inputValid = false;
                errMsg = errMsg + 'Incident Background cannot be empty<br />';
            }

            if (inputValid == false) {
                $('#CCCPModal').find('.modal-body').html(errMsg);
                $('#CCCPModal').find('.modal-title').html('Validation Summary');
                $('#CCCPModal').modal('toggle');

                event.preventDefault();
            }

            return inputValid;
        });
    </script>
}
