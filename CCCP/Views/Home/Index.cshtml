
@using CCCP.Business.Service
@using CCCP.Common
@using CCCP.ViewModel
@using CCCP.Business.Model
@{
    ViewBag.Title = @Resources.global.Menu_Dashboard;
}

<section class="content-header">
    <h1>
        <i class="fa fa-dashboard"></i> @Resources.global.Menu_Dashboard
    </h1>
</section>

<section class="content">
    <div class="row">
        <div class="col-lg-6">
            <!-- info box -->
            <div class="info-box bg-green">
                <span class="info-box-icon">
                    <i class="glyphicon glyphicon-align-left"></i>
                </span>
                <div class="info-box-content">
                    <span class="info-box-text">General Enquiries</span>
                    <span class="info-box-number">@ViewBag.GeneralEnquiryProgress</span>
                    <div class="progress">
                        <div class="progress-bar" style="width: @ViewBag.GeneralEnquiryProgressPercentage%"></div>
                    </div>
                    <span class="progress-description">
                        @ViewBag.GeneralEnquiryProgressPercentage% Finished
                    </span>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <!-- info box -->
            <div class="info-box bg-orange">
                <span class="info-box-icon">
                    <i class="glyphicon glyphicon-align-left"></i>
                </span>
                <div class="info-box-content">
                    <span class="info-box-text">Incidents</span>
                    <span class="info-box-number">@ViewBag.IncidentProgress</span>
                    <div class="progress">
                        <div class="progress-bar" style="width: @ViewBag.IncidentProgressPercentage%"></div>
                    </div>
                    <span class="progress-description">
                        @ViewBag.IncidentProgressPercentage% Finished
                    </span>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-6">
            <div class="box box-success box-solid" id="DivOutstandingGeneralEnquiry" style="height:500px">
                <div class="box-header with-border">
                    <h3 class="box-title">Outstanding General Enquiries</h3>
                    <!-- /.box-tools -->
                    <span class="pull-right">Total: @ViewBag.OutstandingGeneralEnquiryCount</span>
                </div>
                <!-- /.box-header -->
                <div class="box-body">

                    <table class="OutstandingGeneralEnquiry table table-striped table-bordered" cellspacing="0" width="100%">
                        <thead>
                            <th>ID</th>
                            <th>Enquiry Type</th>
                            <th>Date</th>
                            <th></th>
                        </thead>
                        <tbody>
                            @{
                                foreach (usp_Dashboard_GetOutstandingGeneralEnquiry1_Result item in ViewBag.OutStandingGeneralEnquiryList)
                                {
                                    <tr>
                                        <td>@item.GeneralEnquiryId</td>
                                        <td>@item.IncidentType</td>
                                        <td>@(item.IssueDateTime != null ? item.IssueDateTime.Value.ToString("yyyy-MM-dd HH:mm:ss") : "")</td>
                                        <td><a href="@Url.Action("Details", "GeneralEnquiry", new { id = item.GeneralEnquiryId })"><i class="fa fa-sliders"></i></a></td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
                <!-- /.box-body -->
            </div>
        </div>
        <div class="col-lg-6">
            <div class="box box-warning box-solid" id="DivOutstandingIncident" style="height:500px">
                <div class="box-header with-border">
                    <h3 class="box-title">Outstanding Incidents</h3>
                    <!-- /.box-tools -->
                    <span class="pull-right">Total: @ViewBag.OutstandingIncidentCount</span>
                </div>
                <!-- /.box-header -->
                <div class="box-body">

                    <ul class="nav nav-pills">
                        <li class="active"><a href="#Level1" data-toggle="tab">Level 1</a></li>
                        <li><a href="#Level2" data-toggle="tab">Level 2</a></li>
                        <li><a href="#Level3" data-toggle="tab">Level 3</a></li>
                        <li><a href="#Crisis" data-toggle="tab">Crisis</a></li>
                    </ul>

                    <div id="myTabContent" class="tab-content">

                        <div class="tab-pane fade active in" id="Level1">
                            <div class="box box-primary">
                                <div class="box-body">
                                    <table class="OutstandingCase table table-striped table-bordered" cellspacing="0" width="100%">
                                        <thead>
                                        <th width="80px">Incident No.</th>
                                        <th width="200px">Incident Type</th>
                                        <th width="100px">Date</th>
                                        <th width="200px">Incident Background</th>
                                        <th></th>
                                        </thead>
                                        <tbody>
                                            @{
                                                foreach (usp_Dashboard_GetOutstandingIncident1_Result item in ViewBag.OutstandingIncidentLevel1List)
                                                {
                                                    <tr>
                                                        <td>@item.IncidentNo</td>
                                                        <td>@item.IncidentType</td>
                                                        <td>@(item.IssueDateTime != null ? item.IssueDateTime.Value.ToString("yyyy-MM-dd HH:mm:ss") : "")</td>
                                                        <td class="hide_overflow">@item.IncidentBackground</td>
                                                        <td><a href="@Url.Action("Details", item.Controller, new { id = item.IncidentId })"><i class="fa fa-sliders"></i></a></td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="Level2">
                            <div class="box box-primary">
                                <div class="box-body">
                                    <table class="OutstandingCase table table-striped table-bordered" cellspacing="0" width="100%">
                                        <thead>
                                        <th width="80px">Incident No.</th>
                                        <th width="200px">Incident Type</th>
                                        <th width="100px">Date</th>
                                        <th width="200px">Incident Background</th>
                                        <th></th>
                                        </thead>
                                        <tbody>
                                            @{
                                                foreach (usp_Dashboard_GetOutstandingIncident1_Result item in ViewBag.OutstandingIncidentLevel2List)
                                                {
                                                    <tr>
                                                        <td>@item.IncidentNo</td>
                                                        <td>@item.IncidentType</td>
                                                        <td>@(item.IssueDateTime != null ? item.IssueDateTime.Value.ToString("yyyy-MM-dd HH:mm:ss") : "")</td>
                                                        <td class="hide_overflow">@item.IncidentBackground</td>
                                                        <td><a href="@Url.Action("Details", item.Controller, new { id = item.IncidentId })"><i class="fa fa-sliders"></i></a></td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="Level3">
                            <div class="box box-primary">
                                <div class="box-body">
                                    <table class="OutstandingCase table table-striped table-bordered" cellspacing="0" width="100%">
                                        <thead>
                                        <th width="80px">Incident No.</th>
                                        <th width="200px">Incident Type</th>
                                        <th width="100px">Date</th>
                                        <th width="200px">Incident Background</th>
                                        <th></th>
                                        </thead>
                                        <tbody>
                                            @{
                                                foreach (usp_Dashboard_GetOutstandingIncident1_Result item in ViewBag.OutstandingIncidentLevel3List)
                                                {
                                                    <tr>
                                                        <td>@item.IncidentNo</td>
                                                        <td>@item.IncidentType</td>
                                                        <td>@(item.IssueDateTime != null ? item.IssueDateTime.Value.ToString("yyyy-MM-dd HH:mm:ss") : "")</td>
                                                        <td class="hide_overflow">@item.IncidentBackground</td>
                                                        <td><a href="@Url.Action("Details", item.Controller, new { id = item.IncidentId })"><i class="fa fa-sliders"></i></a></td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="Crisis">
                            <div class="box box-primary">
                                <div class="box-body">
                                    <table class="OutstandingCase table table-striped table-bordered" cellspacing="0" width="100%">
                                        <thead>
                                        <th width="80px">Crisis No.</th>
                                        <th width="200px">Incident Type</th>
                                        <th width="100px">Date</th>
                                        <th></th>
                                        </thead>
                                        <tbody>
                                            @{
                                                foreach (usp_Dashboard_GetOutstandingCrisis_Result item in ViewBag.OutstandingCrisisList)
                                                {
                                                    <tr>
                                                        <td>@item.CrisisNo</td>
                                                        <td>@item.IncidentType</td>
                                                        <td>@(item.IssueDateTime != null ? item.IssueDateTime.Value.ToString("yyyy-MM-dd HH:mm:ss") : "")</td>
                                                        <td><a href="@Url.Action("Details", "CrisisManagement", new { id = item.CrisisId })"><i class="fa fa-sliders"></i></a></td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <!-- /.box-body -->
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            
            <div class="box box-primary box-solid">
                <div class="box-header with-border">
                    <h3 class="box-title">Incident Summary</h3>
                    <!-- /.box-tools -->
                </div>
                <!-- /.box-header -->
                <div class="box-body">

                    @{
                        
                    }

                    <table class="table table-striped table-bordered" cellspacing="0" width="100%">
                        <thead>
                            <th></th>
                            <th>Leakage</th>
                            <th>Air Emission</th>
                            <th>Generation</th>
                            <th>OHS</th>
                            <th>Corporate Image</th>
                            <th>Network</th>
                            <th>System - Invoicing</th>
                            <th>System - Billing</th>
                            <th>System - Call Centre</th>
                            <th>System - Network Connectivity</th>
                            <th>System - IT System</th>
                            <th>System - OT System</th>
                        </thead>
                        <tbody>
                            <tr>
                                <td>General Enquiry</td>
                                @{
                                    foreach (IncidentTypeSubType item in Enum.GetValues(typeof(IncidentTypeSubType)))
                                    {
                                <td><a href="@Url.Action("Index", "GeneralEnquiry", new { searchCriteria = MasterTableService.GetIncidentTypeName(item) })">
                                    @(ViewBag.IncidentSummary.ContainsKey("GeneralEnquiry_" + item.ToString()) && ViewBag.IncidentSummary["GeneralEnquiry_" + item.ToString()] != 0 ? ViewBag.IncidentSummary["GeneralEnquiry_" + item.ToString()] : "")
                                </a></td>        
                                    }
                                }
                            </tr>
                            <tr>
                                <td>Level 1</td>
                                @{
                                    foreach (var item in Enum.GetValues(typeof(IncidentTypeSubType)))
                                    {
                                <td><a href="@Url.Action("Index", "Incident" + item.ToString(), new { searchCriteria = "Level 1" })">
                                    @(ViewBag.IncidentSummary.ContainsKey("IncidentLevel1_" + item.ToString()) && ViewBag.IncidentSummary["IncidentLevel1_" + item.ToString()] != 0 ? ViewBag.IncidentSummary["IncidentLevel1_" + item.ToString()] : "")
                                </a></td>
                                    }
                                }
                            </tr>
                            <tr>
                                <td>Level 2</td>
                                @{
                                    foreach (var item in Enum.GetValues(typeof(IncidentTypeSubType)))
                                    {
                                <td>
                                    <a href="@Url.Action("Index", "Incident" + item.ToString(), new { searchCriteria = "Level 2" })">
                                        @(ViewBag.IncidentSummary.ContainsKey("IncidentLevel2_" + item.ToString()) && ViewBag.IncidentSummary["IncidentLevel2_" + item.ToString()] != 0 ? ViewBag.IncidentSummary["IncidentLevel2_" + item.ToString()] : "")
                                    </a>
                                </td>
                                    }
                                }
                            </tr>
                            <tr>
                                <td>Level 3</td>
                                @{
                                    foreach (var item in Enum.GetValues(typeof(IncidentTypeSubType)))
                                    {
                                <td>
                                    <a href="@Url.Action("Index", "Incident" + item.ToString(), new { searchCriteria = "Level 3" })">
                                        @(ViewBag.IncidentSummary.ContainsKey("IncidentLevel3_" + item.ToString()) && ViewBag.IncidentSummary["IncidentLevel3_" + item.ToString()] != 0 ? ViewBag.IncidentSummary["IncidentLevel3_" + item.ToString()] : "")
                                    </a>
                                </td>
                                    }
                                }
                            </tr>
                            <tr>
                                <td>Crisis</td>
                                @{
                                    foreach (IncidentTypeSubType item in Enum.GetValues(typeof(IncidentTypeSubType)))
                                    {
                                <td>
                                    <a href="@Url.Action("Index", "CrisisManagement", new { searchCriteria = MasterTableService.GetIncidentTypeName(item) })">
                                        @(ViewBag.IncidentSummary.ContainsKey("Crisis_" + item.ToString()) && ViewBag.IncidentSummary["Crisis_" + item.ToString()] != 0 ? ViewBag.IncidentSummary["Crisis_" + item.ToString()] : "")
                                    </a>
                                </td>
                                    }
                                }
                            </tr>
                        </tbody>
                    </table>
                </div>
                <!-- /.box-body -->
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">

            <div class="box box-danger box-solid">
                <div class="box-header with-border">
                    <h3 class="box-title">Crisis Approval List</h3>
                    <!-- /.box-tools -->
                </div>
                <!-- /.box-header -->
                <div class="box-body">

                    <table class="table table-striped table-bordered" cellspacing="0" width="100%">
                        <thead>
                            <th>Incident No</th>
                            <th>Incident Type</th>
                            <th>Level of Severity</th>
                            <th>Description</th>
                            <th>Created By</th>
                            <th>Issued Date Time</th>
                            <th></th>
                        </thead>
                        <tbody>
                            @{
                                foreach (CrisisModel item in ViewBag.CrisisApprovalList)
                                {
                                    int id = item.IncidentId;
                                    String Desc = "";
                                    String LevelOfSeverity = "";
                                    String IncidentNo = "";
                                    IncidentLevel iLevel = IncidentLevel.None;
                                    CCCPDbContext db = new CCCPDbContext();

                                    if (id > 0)
                                    {
                                        switch (item.IncidentType)
                                        {
                                            case IncidentTypeSubType.EnvironmentAirEmission:
                                                IncidentEnvironmentAirEmission incidentEnvironmentAirEmission = db.IncidentEnvironmentAirEmission.Find(id);
                                                Desc = incidentEnvironmentAirEmission.IncidentBackground;
                                                IncidentNo = incidentEnvironmentAirEmission.IncidentNo;
                                                iLevel = (IncidentLevel)Convert.ToInt32(incidentEnvironmentAirEmission.LevelOfSeverity);
                                                LevelOfSeverity = iLevel.ToEnumString();
                                                break;
                                            case IncidentTypeSubType.EnvironmentLeakage:
                                                IncidentEnvironmentLeakage incidentEnvironmentLeakage = db.IncidentEnvironmentLeakage.Find(id);
                                                Desc = incidentEnvironmentLeakage.IncidentBackground;
                                                IncidentNo = incidentEnvironmentLeakage.IncidentNo;
                                                iLevel = (IncidentLevel)Convert.ToInt32(incidentEnvironmentLeakage.LevelOfSeverity);
                                                LevelOfSeverity = iLevel.ToEnumString();
                                                break;
                                            case IncidentTypeSubType.OHS:
                                                IncidentOHS incidentOHS = db.IncidentOHS.Find(id);
                                                Desc = incidentOHS.IncidentBackground;
                                                IncidentNo = incidentOHS.IncidentNo;
                                                iLevel = (IncidentLevel)Convert.ToInt32(incidentOHS.LevelOfSeverity);
                                                LevelOfSeverity = iLevel.ToEnumString();
                                                break;
                                            case IncidentTypeSubType.QualityCorporateImage:
                                                IncidentQualityCorporateImage incidentQualityCorporateImage = db.IncidentQualityCorporateImage.Find(id);
                                                Desc = incidentQualityCorporateImage.IncidentBackground;
                                                IncidentNo = incidentQualityCorporateImage.IncidentNo;
                                                iLevel = (IncidentLevel)Convert.ToInt32(incidentQualityCorporateImage.LevelOfSeverity);
                                                LevelOfSeverity = iLevel.ToEnumString();
                                                break;
                                            case IncidentTypeSubType.QualityGeneration:
                                                IncidentQualityGeneration incidentQualityGeneration = db.IncidentQualityGeneration.Find(id);
                                                Desc = incidentQualityGeneration.IncidentBackground;
                                                IncidentNo = incidentQualityGeneration.IncidentNo;
                                                iLevel = (IncidentLevel)Convert.ToInt32(incidentQualityGeneration.LevelOfSeverity);
                                                LevelOfSeverity = iLevel.ToEnumString();
                                                break;
                                            case IncidentTypeSubType.QualityNetwork:
                                                IncidentQualityNetwork incidentQualityNetwork = db.IncidentQualityNetwork.Find(id);
                                                Desc = incidentQualityNetwork.IncidentBackground;
                                                IncidentNo = incidentQualityNetwork.IncidentNo;
                                                iLevel = (IncidentLevel)Convert.ToInt32(incidentQualityNetwork.LevelOfSeverity);
                                                LevelOfSeverity = iLevel.ToEnumString();
                                                break;
                                            case IncidentTypeSubType.SystemBilling:
                                                IncidentSystemBilling incidentSystemBilling = db.IncidentSystemBilling.Find(id);
                                                Desc = incidentSystemBilling.IncidentBackground;
                                                IncidentNo = incidentSystemBilling.IncidentNo;
                                                iLevel = (IncidentLevel)Convert.ToInt32(incidentSystemBilling.LevelOfSeverity);
                                                LevelOfSeverity = iLevel.ToEnumString();
                                                break;
                                            case IncidentTypeSubType.SystemCallCentre:
                                                IncidentSystemCallCentre incidentSystemCallCentre = db.IncidentSystemCallCentre.Find(id);
                                                Desc = incidentSystemCallCentre.IncidentBackground;
                                                IncidentNo = incidentSystemCallCentre.IncidentNo;
                                                iLevel = (IncidentLevel)Convert.ToInt32(incidentSystemCallCentre.LevelOfSeverity);
                                                LevelOfSeverity = iLevel.ToEnumString();
                                                break;
                                            case IncidentTypeSubType.SystemInvoicing:
                                                IncidentSystemInvoicing incidentSystemInvoicing = db.IncidentSystemInvoicing.Find(id);
                                                Desc = incidentSystemInvoicing.IncidentBackground;
                                                IncidentNo = incidentSystemInvoicing.IncidentNo;
                                                iLevel = (IncidentLevel)Convert.ToInt32(incidentSystemInvoicing.LevelOfSeverity);
                                                LevelOfSeverity = iLevel.ToEnumString();
                                                break;
                                            case IncidentTypeSubType.SystemITSystem:
                                                IncidentSystemITSystem incidentSystemITSystem = db.IncidentSystemITSystem.Find(id);
                                                Desc = incidentSystemITSystem.IncidentBackground;
                                                IncidentNo = incidentSystemITSystem.IncidentNo;
                                                iLevel = (IncidentLevel)Convert.ToInt32(incidentSystemITSystem.LevelOfSeverity);
                                                LevelOfSeverity = iLevel.ToEnumString();
                                                break;
                                            case IncidentTypeSubType.SystemNetworkConnectivity:
                                                IncidentSystemNetworkConnectivity incidentSystemNetworkConnectivity = db.IncidentSystemNetworkConnectivity.Find(id);
                                                Desc = incidentSystemNetworkConnectivity.IncidentBackground;
                                                IncidentNo = incidentSystemNetworkConnectivity.IncidentNo;
                                                iLevel = (IncidentLevel)Convert.ToInt32(incidentSystemNetworkConnectivity.LevelOfSeverity);
                                                LevelOfSeverity = iLevel.ToEnumString();
                                                break;
                                            case IncidentTypeSubType.SystemOTSystem:
                                                IncidentSystemOTSystem incidentSystemOTSystem = db.IncidentSystemOTSystem.Find(id);
                                                Desc = incidentSystemOTSystem.IncidentBackground;
                                                IncidentNo = incidentSystemOTSystem.IncidentNo;
                                                iLevel = (IncidentLevel)Convert.ToInt32(incidentSystemOTSystem.LevelOfSeverity);
                                                LevelOfSeverity = iLevel.ToEnumString();
                                                break;
                                        }
                                    } 
                            <tr>
                                <td>@Html.DisplayFor(model => IncidentNo)</td>
                                <td>@MasterTableService.GetIncidentTypeName(item.IncidentType)</td>
                                <td>@Html.DisplayFor(model => LevelOfSeverity)</td>
                                <td>@Html.DisplayFor(model => Desc)</td>
                                <td>@Html.DisplayFor(model => item.Entity.CreatedBy)</td>
                                <td>@Html.DisplayFor(model => item.Entity.IssueDateTime)</td>
                                <td>
                                    <div>
                                        <a href="@Url.Action("Details", "CrisisApproval", new { id = item.Entity.CrisisId })" title="@Resources.global.Func_Details"><i class="fa fa-sliders"></i></a>
                                    </div>
                                </td>
                            </tr>
                                }
                            }
                        </tbody>
                    </table>
                    <a href="@Url.Action("Index", "CrisisApproval")" class="small-box-footer pull-right">
                        More <i class="fa fa-arrow-circle-right"></i>
                    </a>
                </div>
                <!-- /.box-body -->
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.OutstandingCase').DataTable({
                "sDom": '<"top">rt<"bottom"ip><"clear">',
                "iDisplayLength": 4,
                "order": [[2, "desc"]]
            });

            $('.OutstandingGeneralEnquiry').DataTable({
                "sDom": '<"top">rt<"bottom"ip><"clear">',
                "iDisplayLength": 6,
                "order": [[2, "desc"]]
            });
        });
    </script>
}